{"version":3,"file":"bundle.7bec2d60f21bac09de18.js","mappings":"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","sources":["webpack://nonograms/./src/index.js","webpack://nonograms/./src/scripts/utils/capitalizeWord.js","webpack://nonograms/./src/scripts/cell/cellStates.js","webpack://nonograms/./src/scripts/game/decodePuzzle.js","webpack://nonograms/./src/scripts/game/formPuzzleClues.js","webpack://nonograms/./src/scripts/game-board/countPuzzleRowsCols.js","webpack://nonograms/./src/scripts/game-board/drawGameBoardGrid.js","webpack://nonograms/./src/scripts/game-board/getGameBoardSize.js","webpack://nonograms/./src/scripts/game-board/setTextStyleForClues.js","webpack://nonograms/./src/scripts/cell/fillCellWithColor.js","webpack://nonograms/./src/scripts/cell/makeCellTransparent.js","webpack://nonograms/./src/scripts/game-board/getCoordShiftByIndex.js","webpack://nonograms/./src/scripts/game-board/drawSolution.js","webpack://nonograms/./src/scripts/game-board/writeClues.js","webpack://nonograms/./src/scripts/actions/actionTypes.js","webpack://nonograms/./src/scripts/cell/fillCellWithCross.js","webpack://nonograms/./src/scripts/cell/changeCellContent.js","webpack://nonograms/./src/scripts/cell/changeState.js","webpack://nonograms/./src/scripts/cell/getDeltaForState.js","webpack://nonograms/./src/scripts/cell/getDeltaForNewState.js","webpack://nonograms/./src/scripts/sound/soundStateMap.js","webpack://nonograms/./src/scripts/cell/playSoundOnStateChange.js","webpack://nonograms/./src/scripts/Cell.js","webpack://nonograms/./src/scripts/cell/correctState.js","webpack://nonograms/./src/scripts/play-field/constructBoardCells.js","webpack://nonograms/./src/scripts/play-field/countSumCellsForPlayField.js","webpack://nonograms/./src/scripts/play-field/countFilledCellsInPuzzle.js","webpack://nonograms/./src/scripts/play-field/initializeBoardStateMatrix.js","webpack://nonograms/./src/scripts/play-field/isEmptyBoardStateMatrix.js","webpack://nonograms/./src/scripts/play-field/playSoundOnWin.js","webpack://nonograms/./src/scripts/game/encodePuzzle.js","webpack://nonograms/./src/scripts/cell/changeCellsContentToBoardState.js","webpack://nonograms/./src/scripts/PlayField.js","webpack://nonograms/./src/scripts/game-board/getCellIndexByOneCoord.js","webpack://nonograms/./src/scripts/play-field/clearPlayField.js","webpack://nonograms/./src/scripts/layout/createGameBoardCanvas.js","webpack://nonograms/./src/scripts/game-board/getTextVertDeltaPx.js","webpack://nonograms/./src/scripts/GameBoard.js","webpack://nonograms/./src/scripts/stop-watch/formatTimeInSec.js","webpack://nonograms/./src/scripts/StopWatch.js","webpack://nonograms/./src/scripts/latest-wins/getLatestWins.js","webpack://nonograms/./src/scripts/latest-wins/addLatestWin.js","webpack://nonograms/./src/scripts/latest-wins/getSortedLatestWins.js","webpack://nonograms/./src/scripts/layout/latest-wins/updateLatestWinsNodes.js","webpack://nonograms/./src/scripts/game/saveGameToLocalStorage.js","webpack://nonograms/./src/scripts/Game.js","webpack://nonograms/./src/scripts/layout/latest-wins/createLatestWinsNodes.js","webpack://nonograms/./src/scripts/layout/select-game/createSelectGameSection.js","webpack://nonograms/./src/scripts/layout/select-game/createLevelOptions.js","webpack://nonograms/./src/scripts/layout/select-game/createNonogramOptions.js","webpack://nonograms/./src/scripts/layout/select-game/handleLevelChange.js","webpack://nonograms/./src/scripts/layout/select-game/handleNonogramChange.js","webpack://nonograms/./src/scripts/layout/createStatusSection.js","webpack://nonograms/./src/scripts/game/loadGameFromLocalStorage.js","webpack://nonograms/./src/scripts/layout/message/createMessageDialog.js","webpack://nonograms/./src/scripts/layout/message/showMessageDialog.js","webpack://nonograms/./src/scripts/GameApp.js","webpack://nonograms/./src/scripts/layout/createActionButtonsSection.js","webpack://nonograms/./src/scripts/layout/createHeader.js","webpack://nonograms/./src/scripts/layout/createRandomButton.js","webpack://nonograms/./src/scripts/layout/createSettingsButtons.js","webpack://nonograms/./src/scripts/layout/getGameAppNode.js","webpack://nonograms/./src/scripts/layout/hamburger/closeHamburgerMenu.js","webpack://nonograms/./src/scripts/layout/hamburger/createDrawerOverlayHamburg.js","webpack://nonograms/./src/scripts/layout/hamburger/createDrawerOverlayLatestWins.js","webpack://nonograms/./src/scripts/layout/hamburger/createHamburgerSection.js","webpack://nonograms/./src/scripts/layout/hamburger/openHamburgerMenu.js","webpack://nonograms/./src/scripts/layout/hamburger/handleHamburgBtnClick.js","webpack://nonograms/./src/scripts/layout/hamburger/hideHamburgerLatestWins.js","webpack://nonograms/./src/scripts/layout/hamburger/showHamburgerLatestWins.js","webpack://nonograms/./src/scripts/settings/restoreSoundSettings.js","webpack://nonograms/./src/scripts/settings/restoreThemeSettings.js","webpack://nonograms/./src/scripts/settings/restoreSavedSettings.js","webpack://nonograms/./src/scripts/sound/changeSoundsMuteValue.js","webpack://nonograms/./src/scripts/sound/getSoundMuteValue.js","webpack://nonograms/./src/scripts/sound/soundEffects.js","webpack://nonograms/./src/scripts/theme/changeTheme.js","webpack://nonograms/./src/scripts/theme/getThemeName.js","webpack://nonograms/./src/scripts/theme/themesList.js","webpack://nonograms/./src/scripts/theme/toggleTheme.js","webpack://nonograms/webpack/bootstrap","webpack://nonograms/webpack/runtime/async module","webpack://nonograms/webpack/runtime/define property getters","webpack://nonograms/webpack/runtime/global","webpack://nonograms/webpack/runtime/hasOwnProperty shorthand","webpack://nonograms/webpack/runtime/publicPath","webpack://nonograms/webpack/before-startup","webpack://nonograms/webpack/startup","webpack://nonograms/webpack/after-startup"],"sourcesContent":["import \"./sass/style.scss\";\nimport NonogramsData from \"./data/nonograms.json\";\nimport GameApp from \"./scripts/GameApp\";\nimport { createHeader } from \"./scripts/layout/createHeader\";\nimport { createRandomButton } from \"./scripts/layout/createRandomButton\";\nimport { createSettingsButtons } from \"./scripts/layout/createSettingsButtons\";\nimport { changeSoundsMuteValue } from \"./scripts/sound/changeSoundsMuteValue\";\nimport VolUpSvg from \"./assets/icons/volume_up.svg\";\nimport VolOffSvg from \"./assets/icons/volume_off.svg\";\nimport LightModeSvg from \"./assets/icons/light_mode.svg\";\nimport DarkModeSvg from \"./assets/icons/dark_mode.svg\";\nimport BurgerToOpenSvg from \"./assets/icons/burger_to_open.svg\";\nimport BurgerToCloseSvg from \"./assets/icons/burger_to_close.svg\";\nimport { toggleTheme } from \"./scripts/theme/toggleTheme\";\nimport { restoreSavedSettings } from \"./scripts/settings/restoreSavedSettings\";\nimport { createActionButtonsSection } from \"./scripts/layout/createActionButtonsSection\";\nimport { createHamburgerSection } from \"./scripts/layout/hamburger/createHamburgerSection\";\nimport { showHamburgerLatestWins } from \"./scripts/layout/hamburger/showHamburgerLatestWins\";\nimport { closeHamburgerMenu } from \"./scripts/layout/hamburger/closeHamburgerMenu\";\nimport { createDrawerOverlayLatestWins } from \"./scripts/layout/hamburger/createDrawerOverlayLatestWins\";\nimport { createDrawerOverlayHamburg } from \"./scripts/layout/hamburger/createDrawerOverlayHamburg\";\nimport { handleHamburgBtnClick } from \"./scripts/layout/hamburger/handleHamburgBtnClick\";\nimport { hideHamburgerLatestWins } from \"./scripts/layout/hamburger/hideHamburgerLatestWins\";\n\ndocument.body.classList.add(\"page\");\n// create in this order for the correct order in the stacking context\nrestoreSavedSettings();\ncreateHeader();\nawait document.fonts.ready;\nconst { soundBtn, themeBtn, burgerBtn } = createSettingsButtons();\nconst gameApp = new GameApp(NonogramsData);\nconst randomBtn = createRandomButton();\nconst drawerOverlayLatestWins = createDrawerOverlayLatestWins();\nconst {\n  hambSection,\n  hambBtnsNodes: [scoreHambBtn, randomHambBtn, loadHambBtn, solutionHambBtn],\n} = createHamburgerSection();\nconst drawerOverlayHamburg = createDrawerOverlayHamburg();\nconst [resetBtn, saveBtn, loadBtn, solutionBtn] = createActionButtonsSection();\n\nrandomBtn.addEventListener(\"click\", gameApp.setRandomPuzzle.bind(gameApp));\nresetBtn.addEventListener(\"click\", gameApp.resetGame.bind(gameApp));\nsaveBtn.addEventListener(\"click\", gameApp.saveGame.bind(gameApp));\nloadBtn.addEventListener(\"click\", gameApp.loadGame.bind(gameApp));\nsolutionBtn.addEventListener(\"click\", gameApp.showSolution.bind(gameApp));\n\nconst closeHamburger = () => {\n  closeHamburgerMenu(\n    hambSection,\n    drawerOverlayHamburg,\n    burgerBtn,\n    BurgerToOpenSvg\n  );\n};\n\nscoreHambBtn.addEventListener(\"click\", () => {\n  showHamburgerLatestWins(\n    hambSection,\n    gameApp.latestWinsSection,\n    drawerOverlayLatestWins\n  );\n});\nrandomHambBtn.addEventListener(\"click\", () => {\n  gameApp.setRandomPuzzle();\n  closeHamburger();\n});\nloadHambBtn.addEventListener(\"click\", () => {\n  gameApp.loadGame();\n  closeHamburger();\n});\nsolutionHambBtn.addEventListener(\"click\", () => {\n  gameApp.showSolution();\n  closeHamburger();\n});\n\nsoundBtn.addEventListener(\"click\", () => {\n  gameApp.isSoundMuted = changeSoundsMuteValue(!gameApp.isSoundMuted);\n  soundBtn.innerHTML = gameApp.isSoundMuted ? VolOffSvg : VolUpSvg;\n  soundBtn.firstChild.classList.add(\"btn__icon\");\n});\nthemeBtn.addEventListener(\"click\", () => {\n  gameApp.themeName = toggleTheme(gameApp.themeName);\n  themeBtn.innerHTML =\n    gameApp.themeName === \"light\" ? LightModeSvg : DarkModeSvg;\n  themeBtn.firstChild.classList.add(\"btn__icon\");\n});\nburgerBtn.addEventListener(\"click\", () => {\n  handleHamburgBtnClick(\n    hambSection,\n    gameApp.latestWinsSection,\n    drawerOverlayHamburg,\n    drawerOverlayLatestWins,\n    burgerBtn,\n    BurgerToOpenSvg,\n    BurgerToCloseSvg\n  );\n});\n\nwindow.addEventListener(\"resize\", () => {\n  if (window.innerWidth >= 768) {\n    hideHamburgerLatestWins(\n      hambSection,\n      gameApp.latestWinsSection,\n      drawerOverlayLatestWins\n    );\n    closeHamburger();\n  }\n});\n","export const capitalizeWord = (word) => {\n  const capitalizedWord =\n    word[0].toUpperCase() + word.substring(1).toLowerCase();\n  return capitalizedWord;\n};\n","const CROSS = -1;\nconst EMPTY = 0;\nconst FILLED = 1;\n\nconst stateToChar = {\n  [CROSS]: \"c\",\n  [EMPTY]: \"e\",\n  [FILLED]: \"f\",\n};\n\nconst charToState = {\n  c: CROSS,\n  e: EMPTY,\n  f: FILLED,\n};\n\nconst regExpStates = Object.keys(charToState).join(\"|\");\nconst regExpStr = `([${regExpStates}])([0-9]*)`;\nconst regExpWithStates = new RegExp(regExpStr, \"g\");\n\nexport { CROSS, EMPTY, FILLED, stateToChar, charToState, regExpWithStates };\n","import { charToState, regExpWithStates } from \"../cell/cellStates\";\n\nexport const decodePuzzle = (puzzleString) => {\n  const puzzleStrArr = puzzleString.split(\".\");\n  const numRows = +puzzleStrArr[0];\n  const numCols = +puzzleStrArr[1];\n  const strToDecode = puzzleStrArr[2];\n\n  const puzzleMatrix = [...Array(numRows)].map(() => Array(numCols));\n  const strMatches = [...strToDecode.matchAll(regExpWithStates)];\n  let elemIdx = 0;\n  for (let iGroup = 0; iGroup < strMatches.length; iGroup += 1) {\n    const group = strMatches[iGroup];\n    const valueStr = group[1];\n    const countStr = group[2];\n    const value = charToState[valueStr];\n    const count = +countStr || 1;\n    for (let i = 0; i < count; i += 1) {\n      const iRow = Math.floor(elemIdx / numCols);\n      const jCol = elemIdx % numCols;\n      puzzleMatrix[iRow][jCol] = value;\n      elemIdx += 1;\n    }\n  }\n\n  return puzzleMatrix;\n};\n","import { EMPTY, FILLED } from \"../cell/cellStates\";\n\nexport const formPuzzleClues = (puzzleMatrix) => {\n  const numRows = puzzleMatrix.length;\n  const numCols = puzzleMatrix[0].length;\n  const rowsAllClues = [];\n  const colsAllClues = [...Array(numCols)].map(() => []);\n  const colsCluesCounter = Array(numCols).fill(0);\n  for (let iRow = 0; iRow < numRows; iRow += 1) {\n    const rowClues = [];\n    let rowCluesCounter = 0;\n    for (let jCol = 0; jCol < numCols; jCol += 1) {\n      const value = puzzleMatrix[iRow]?.[jCol] ?? 0;\n      switch (value) {\n        case EMPTY:\n          if (rowCluesCounter > 0) {\n            rowClues.push(rowCluesCounter);\n          }\n          if (colsCluesCounter[jCol] > 0) {\n            colsAllClues[jCol].push(colsCluesCounter[jCol]);\n          }\n          rowCluesCounter = 0;\n          colsCluesCounter[jCol] = 0;\n          break;\n        case FILLED:\n        default:\n          rowCluesCounter += 1;\n          colsCluesCounter[jCol] += 1;\n          if (jCol === numCols - 1) {\n            rowClues.push(rowCluesCounter);\n          }\n          if (iRow === numRows - 1) {\n            colsAllClues[jCol].push(colsCluesCounter[jCol]);\n          }\n      }\n    }\n    rowsAllClues.push(rowClues);\n  }\n\n  return { rowsAllClues, colsAllClues };\n};\n","export const countPuzzleRowsCols = (puzzleMatrix, puzzleClues) => {\n  const { rowsAllClues, colsAllClues } = puzzleClues;\n\n  const numRowForClues = Math.max(\n    ...colsAllClues.map((colClues) => colClues.length)\n  );\n  const numColForClues = Math.max(\n    ...rowsAllClues.map((rowClues) => rowClues.length)\n  );\n\n  const numRowForPuzzle = puzzleMatrix.length;\n  const numColForPuzzle = puzzleMatrix?.[0].length;\n\n  return { numRowForPuzzle, numColForPuzzle, numRowForClues, numColForClues };\n};\n","export const drawGameBoardGrid = (\n  canvasContextRef,\n  playAreaIn,\n  cluesIn,\n  board,\n  boardSettings\n) => {\n  const ctx = canvasContextRef;\n  const { cellSizePx, lineWidthPx, dividerWidthPx, divideNumCells } =\n    boardSettings;\n  const clues = {\n    rows: {\n      cells: cluesIn.rows,\n    },\n    cols: {\n      cells: cluesIn.cols,\n    },\n  };\n  const playArea = {\n    rows: {\n      cells: playAreaIn.rows,\n    },\n    cols: {\n      cells: playAreaIn.cols,\n    },\n  };\n  const lineShiftPx = lineWidthPx / 2; // to make crisp lines for odd line widths (e.g., 1px)\n  const dividerShiftPx = dividerWidthPx / 2; // coordinate is the center of the lineWidth\n  const isDivider = (index, dividerShiftCnt) => {\n    return (index % divideNumCells) - dividerShiftCnt === 0;\n  };\n  const getShiftInPx = (index, dividerShiftCnt) => {\n    return isDivider(index, dividerShiftCnt) ? dividerShiftPx : lineShiftPx;\n  };\n\n  const getClueLineCoordinate = (lineIndex) => {\n    const coordShiftPx = lineIndex === 0 ? dividerShiftPx : lineShiftPx;\n    const numDividersBeforeLine = lineIndex === 0 ? 0 : 1;\n    const numRegLinesBeforeLine = lineIndex - numDividersBeforeLine;\n    const numCellsBeforeLine = lineIndex;\n    const lineCoordPx =\n      numDividersBeforeLine * dividerWidthPx +\n      numRegLinesBeforeLine * lineWidthPx +\n      numCellsBeforeLine * cellSizePx +\n      coordShiftPx;\n    return lineCoordPx;\n  };\n\n  const getLineCoordinate = (lineIndex, dividerShift) => {\n    const coordShiftPx = getShiftInPx(lineIndex, dividerShift);\n    const numDividersBeforeLine = Math.ceil(\n      (lineIndex - dividerShift) / divideNumCells\n    );\n    const numRegLinesBeforeLine = lineIndex - numDividersBeforeLine;\n    const numCellsBeforeLine = lineIndex;\n    const lineCoordPx =\n      numDividersBeforeLine * dividerWidthPx +\n      numRegLinesBeforeLine * lineWidthPx +\n      numCellsBeforeLine * cellSizePx +\n      coordShiftPx;\n    return lineCoordPx;\n  };\n\n  const getLineWidth = (lineIndex, dividerShift) => {\n    return isDivider(lineIndex, dividerShift) ? dividerWidthPx : lineWidthPx;\n  };\n\n  const getLineColor = (lineIndex, dividerShift) => {\n    return isDivider(lineIndex, dividerShift)\n      ? boardSettings.dividerColor\n      : boardSettings.lineColor;\n  };\n\n  const drawLine = (x0, y0, x1, y1, lineWidth, lineColor) => {\n    ctx.strokeStyle = lineColor;\n    ctx.beginPath();\n    ctx.lineWidth = lineWidth;\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.stroke();\n  };\n\n  const drawColumnLinesForClues = (numCols) => {\n    const yBottom = board.height;\n    const boardTopEdge = 0;\n    for (let i = 0; i < numCols; i += 1) {\n      const yTop = i === 0 ? boardTopEdge : board.cluesHeight;\n      const x = getClueLineCoordinate(i);\n      const lineWidth = i === 0 ? dividerWidthPx : lineWidthPx;\n      const lineColor =\n        i === 0 ? boardSettings.dividerColor : boardSettings.lineColor;\n      drawLine(x, yTop, x, yBottom, lineWidth, lineColor);\n    }\n  };\n  const drawRowLinesForClues = (numRows) => {\n    const xRight = board.width;\n    const boardLeftEdge = 0;\n    for (let i = 0; i < numRows; i += 1) {\n      const xLeft = i === 0 ? boardLeftEdge : board.cluesWidth;\n      const y = getClueLineCoordinate(i);\n      const lineWidth = i === 0 ? dividerWidthPx : lineWidthPx;\n      const lineColor =\n        i === 0 ? boardSettings.dividerColor : boardSettings.lineColor;\n      drawLine(xLeft, y, xRight, y, lineWidth, lineColor);\n    }\n  };\n  const drawColumnLinesForPlayArea = (numCols, dividerShift) => {\n    const boardTopEdge = 0;\n    const yTop = boardTopEdge;\n    const yBottom = board.height;\n    for (let i = 0; i <= numCols; i += 1) {\n      const x = board.cluesWidth + getLineCoordinate(i, dividerShift);\n      const lineWidth = getLineWidth(i, dividerShift);\n      const lineColor = getLineColor(i, dividerShift);\n      drawLine(x, yTop, x, yBottom, lineWidth, lineColor);\n    }\n  };\n  const drawRowLinesForPlayArea = (numRows, dividerShift) => {\n    const boardLeftEdge = 0;\n    const xLeft = boardLeftEdge;\n    const xRight = board.width;\n    for (let i = 0; i <= numRows; i += 1) {\n      const y = board.cluesHeight + getLineCoordinate(i, dividerShift);\n      const lineWidth = getLineWidth(i, dividerShift);\n      const lineColor = getLineColor(i, dividerShift);\n      drawLine(xLeft, y, xRight, y, lineWidth, lineColor);\n    }\n  };\n\n  playArea.cols.dividerShiftCnt = 0; // always 0, because always start with divider\n  playArea.rows.dividerShiftCnt = 0;\n\n  drawColumnLinesForClues(clues.cols.cells);\n  drawRowLinesForClues(clues.rows.cells);\n  drawColumnLinesForPlayArea(\n    playArea.cols.cells,\n    playArea.cols.dividerShiftCnt\n  );\n  drawRowLinesForPlayArea(playArea.rows.cells, playArea.rows.dividerShiftCnt);\n};\n","export const getGameBoardSize = (playAreaIn, cluesIn, boardSettings) => {\n  const { cellSizePx, lineWidthPx, dividerWidthPx, divideNumCells } =\n    boardSettings;\n  const clues = {\n    rows: {\n      cells: cluesIn.rows,\n    },\n    cols: {\n      cells: cluesIn.cols,\n    },\n  };\n  const playArea = {\n    rows: {\n      cells: playAreaIn.rows,\n    },\n    cols: {\n      cells: playAreaIn.cols,\n    },\n  };\n\n  const countDividers = (numCells) => {\n    return Math.floor(numCells / divideNumCells);\n  };\n  const isEndLineDivider = (numCellsPuzzle) => {\n    const isDivider = numCellsPuzzle % divideNumCells === 0;\n    return isDivider;\n  };\n\n  clues.cols.dividers = 1; // only for the first line (border)\n  clues.cols.lines = clues.cols.cells - clues.cols.dividers;\n  playArea.cols.dividers = countDividers(playArea.cols.cells);\n  playArea.cols.lines = playArea.cols.cells - playArea.cols.dividers;\n  const sizeRightEndLine = isEndLineDivider(playArea.cols.cells)\n    ? dividerWidthPx\n    : lineWidthPx;\n  const numColDividers = clues.cols.dividers + playArea.cols.dividers;\n  const numColLines = clues.cols.lines + playArea.cols.lines;\n  const numCol = clues.cols.cells + playArea.cols.cells;\n  const boardWidth =\n    numCol * cellSizePx +\n    numColLines * lineWidthPx +\n    numColDividers * dividerWidthPx +\n    sizeRightEndLine;\n  const cluesWidth =\n    clues.cols.cells * cellSizePx +\n    clues.cols.lines * lineWidthPx +\n    clues.cols.dividers * dividerWidthPx;\n\n  clues.rows.dividers = 1; // only for the first line (border)\n  clues.rows.lines = clues.rows.cells - clues.rows.dividers;\n  playArea.rows.dividers = countDividers(playArea.rows.cells);\n  playArea.rows.lines = playArea.rows.cells - playArea.rows.dividers;\n  const sizeBottomEndLine = isEndLineDivider(playArea.rows.cells)\n    ? dividerWidthPx\n    : lineWidthPx;\n  const numRowDividers = clues.rows.dividers + playArea.rows.dividers;\n  const numRowLines = clues.rows.lines + playArea.rows.lines;\n  const numRow = clues.rows.cells + playArea.rows.cells;\n  const boardHeight =\n    numRow * cellSizePx +\n    numRowLines * lineWidthPx +\n    numRowDividers * dividerWidthPx +\n    sizeBottomEndLine;\n  const cluesHeight =\n    clues.rows.cells * cellSizePx +\n    clues.rows.lines * lineWidthPx +\n    clues.rows.dividers * dividerWidthPx;\n\n  const cntDividerInOneBlock = 1;\n  const blockSize =\n    divideNumCells * cellSizePx +\n    (divideNumCells - cntDividerInOneBlock) * lineWidthPx +\n    cntDividerInOneBlock * dividerWidthPx;\n\n  return { boardWidth, boardHeight, cluesWidth, cluesHeight, blockSize };\n};\n","export const setTextStyleForClues = (canvasContextRef, boardSettings) => {\n  const ctx = canvasContextRef;\n  ctx.fillStyle = boardSettings.cluesColor;\n  ctx.font = boardSettings.cluesFont;\n  ctx.textBaseline = \"middle\";\n  ctx.textAlign = \"center\";\n};\n","export const fillCellWithColor = (\n  canvasContextRef,\n  cell,\n  cellSizePx,\n  fillColor\n) => {\n  const ctx = canvasContextRef;\n  ctx.fillStyle = fillColor;\n  ctx.fillRect(cell.x, cell.y, cellSizePx, cellSizePx);\n};\n","export const makeCellTransparent = (canvasContextRef, cell, cellSizePx) => {\n  const ctx = canvasContextRef;\n  ctx.clearRect(cell.x, cell.y, cellSizePx, cellSizePx);\n};\n","const getFullBlocksCells = (index, divideNumCells) => {\n  const cntFullBlocks = Math.floor(index / divideNumCells);\n  const cntBlockFullCells = index % divideNumCells;\n  return { cntFullBlocks, cntBlockFullCells };\n};\n\nexport const getCoordShiftByIndex = (\n  cellIndexInPuzzle,\n  blockSize,\n  divideNumCells,\n  dividerWidthPx,\n  cellWithLinePx\n) => {\n  const { cntFullBlocks, cntBlockFullCells } = getFullBlocksCells(\n    cellIndexInPuzzle,\n    divideNumCells\n  );\n  const coordShift =\n    cntFullBlocks * blockSize +\n    dividerWidthPx +\n    cntBlockFullCells * cellWithLinePx;\n  return coordShift;\n};\n","import { EMPTY, FILLED } from \"../cell/cellStates\";\nimport { fillCellWithColor } from \"../cell/fillCellWithColor\";\nimport { makeCellTransparent } from \"../cell/makeCellTransparent\";\nimport { getCoordShiftByIndex } from \"./getCoordShiftByIndex\";\n\nexport const drawSolution = (\n  canvasContextRef,\n  puzzleMatrix,\n  board,\n  boardSettings\n) => {\n  const ctx = canvasContextRef;\n  const { cellSizePx, lineWidthPx, dividerWidthPx, divideNumCells } =\n    boardSettings;\n  const cellWithLinePx = cellSizePx + lineWidthPx;\n\n  const getCoordShift = (cellIndexInPuzzle) => {\n    return getCoordShiftByIndex(\n      cellIndexInPuzzle,\n      board.blockSize,\n      divideNumCells,\n      dividerWidthPx,\n      cellWithLinePx\n    );\n  };\n\n  const cell = {\n    x: 0,\n    y: 0,\n  };\n  for (let iRow = 0; iRow < puzzleMatrix.length; iRow += 1) {\n    const puzzleRow = puzzleMatrix[iRow];\n    cell.y = board.cluesHeight + getCoordShift(iRow);\n    for (let jCol = 0; jCol < puzzleRow.length; jCol += 1) {\n      const value = puzzleRow[jCol];\n      cell.x = board.cluesWidth + getCoordShift(jCol);\n      let fillColor;\n      switch (value) {\n        case FILLED:\n          fillColor = boardSettings.filledCellBg;\n          fillCellWithColor(ctx, cell, cellSizePx, fillColor);\n          break;\n        case EMPTY:\n        default:\n          makeCellTransparent(ctx, cell, cellSizePx);\n      }\n    }\n  }\n};\n","import { getCoordShiftByIndex } from \"./getCoordShiftByIndex\";\n\nexport const writeClues = (\n  canvasContextRef,\n  clues,\n  puzzleClues,\n  board,\n  boardSettings\n) => {\n  const ctx = canvasContextRef;\n  const { cellSizePx, lineWidthPx, dividerWidthPx, divideNumCells } =\n    boardSettings;\n  const { textVertDeltaPx } = board;\n  const { colsAllClues, rowsAllClues } = puzzleClues;\n  const cellWithLinePx = cellSizePx + lineWidthPx;\n  const cellHalfSizePx = cellSizePx / 2;\n\n  const getCoordShiftWithDividers = (cellIndexInPuzzle) => {\n    return getCoordShiftByIndex(\n      cellIndexInPuzzle,\n      board.blockSize,\n      divideNumCells,\n      dividerWidthPx,\n      cellWithLinePx\n    );\n  };\n\n  const getCoordShiftWoutDividers = (cellIndexInPuzzle) => {\n    const cntFullCells = cellIndexInPuzzle;\n    const coordShift = dividerWidthPx + cntFullCells * cellWithLinePx;\n    return coordShift;\n  };\n\n  const writeClueInCell = (cell, clueText) => {\n    const clueTextStr = clueText.toString();\n    const xCellCenter = cell.x + cellHalfSizePx;\n    const yCellCenter = cell.y + cellHalfSizePx;\n    // x, y - centers the text around the given x, y coordinates,\n    //        because canvas was configured with textBaseline = \"middle\", textAlign = \"center\"\n    // textVertDeltaPx - delta vertical correction for a given font (based on the font metrics)\n    ctx.fillText(clueTextStr, xCellCenter, yCellCenter + textVertDeltaPx);\n  };\n\n  const writeRowClues = () => {\n    const cell = {\n      x: 0,\n      y: 0,\n    };\n    for (let iRow = 0; iRow < rowsAllClues.length; iRow += 1) {\n      cell.y = board.cluesHeight + getCoordShiftWithDividers(iRow);\n      const rowClues = rowsAllClues[iRow];\n      const colShiftCnt = clues.cols - rowClues.length;\n      for (let jCol = 0; jCol < rowClues.length; jCol += 1) {\n        const clueText = rowClues[jCol];\n        const colIndex = colShiftCnt + jCol;\n        cell.x = getCoordShiftWoutDividers(colIndex);\n        writeClueInCell(cell, clueText);\n      }\n    }\n  };\n\n  const writeColClues = () => {\n    const cell = {\n      x: 0,\n      y: 0,\n    };\n    for (let jCol = 0; jCol < colsAllClues.length; jCol += 1) {\n      cell.x = board.cluesWidth + getCoordShiftWithDividers(jCol);\n      const colClues = colsAllClues[jCol];\n      const rowShiftCnt = clues.rows - colClues.length;\n      for (let iRow = 0; iRow < colClues.length; iRow += 1) {\n        const clueText = colClues[iRow];\n        const rowIndex = rowShiftCnt + iRow;\n        cell.y = getCoordShiftWoutDividers(rowIndex);\n        writeClueInCell(cell, clueText);\n      }\n    }\n  };\n\n  writeRowClues();\n  writeColClues();\n};\n","export const actionTypes = {\n  mainAction: \"click\",\n  subAction: \"contextmenu\",\n};\n","export const fillCellWithCross = (\n  canvasContextRef,\n  cell,\n  cellSizePx,\n  cross\n) => {\n  const ctx = canvasContextRef;\n  ctx.strokeStyle = cross.color;\n  ctx.lineWidth = cross.lineWidth;\n\n  const crossPoints = {\n    leftTop: [cell.x + cross.margin, cell.y + cross.margin],\n    rghtBtm: [\n      cell.x + cellSizePx - cross.margin,\n      cell.y + cellSizePx - cross.margin,\n    ],\n    rghtTop: [cell.x + cellSizePx - cross.margin, cell.y + cross.margin],\n    leftBtm: [cell.x + cross.margin, cell.y + cellSizePx - cross.margin],\n  };\n\n  ctx.clearRect(cell.x, cell.y, cellSizePx, cellSizePx);\n\n  ctx.beginPath();\n  ctx.moveTo(...crossPoints.leftTop);\n  ctx.lineTo(...crossPoints.rghtBtm);\n  ctx.moveTo(...crossPoints.rghtTop);\n  ctx.lineTo(...crossPoints.leftBtm);\n  ctx.stroke();\n};\n","import { FILLED, EMPTY, CROSS } from \"./cellStates\";\nimport { fillCellWithColor } from \"./fillCellWithColor\";\nimport { fillCellWithCross } from \"./fillCellWithCross\";\nimport { makeCellTransparent } from \"./makeCellTransparent\";\n\nexport const changeCellContent = (\n  canvasContext,\n  cellRef,\n  boardSettings,\n  board\n) => {\n  const ctx = canvasContext;\n  const cell = cellRef.getCellData();\n  const { cellSizePx, filledCellBg, cross } = boardSettings;\n  const { cluesWidth, cluesHeight } = board;\n  cell.x += cluesWidth;\n  cell.y += cluesHeight;\n  let fillColor;\n  switch (cell.state) {\n    case EMPTY:\n      makeCellTransparent(ctx, cell, cellSizePx);\n      break;\n    case FILLED:\n      fillColor = filledCellBg;\n      fillCellWithColor(ctx, cell, cellSizePx, fillColor);\n      break;\n    case CROSS:\n      fillCellWithCross(ctx, cell, cellSizePx, cross);\n      break;\n    default:\n      break;\n  }\n};\n","import { CROSS, EMPTY, FILLED } from \"./cellStates\";\n\nconst getStateAfterMainAction = (curState) => {\n  let newState;\n  switch (curState) {\n    case EMPTY:\n      newState = FILLED;\n      break;\n    case FILLED:\n      newState = EMPTY;\n      break;\n    case CROSS:\n      newState = FILLED;\n      break;\n    default:\n      newState = curState;\n  }\n  return newState;\n};\n\nconst getStateAfterSubAction = (curState) => {\n  let newState;\n  switch (curState) {\n    case EMPTY:\n      newState = CROSS;\n      break;\n    case FILLED:\n      newState = CROSS;\n      break;\n    case CROSS:\n      newState = EMPTY;\n      break;\n    default:\n      newState = curState;\n  }\n  return newState;\n};\n\nexport { getStateAfterMainAction, getStateAfterSubAction };\n","import { FILLED, EMPTY } from \"./cellStates\";\n\nconst convertToCountState = (state) => {\n  return state <= EMPTY ? EMPTY : state;\n};\n\nexport const getDeltaForState = (stateValIn, corrVal) => {\n  const stateVal = convertToCountState(stateValIn);\n  const deltaIncorrect = corrVal === EMPTY ? -1 * FILLED : -1 * corrVal;\n  return stateVal === corrVal ? corrVal : deltaIncorrect;\n};\n","import { getDeltaForState } from \"./getDeltaForState\";\n\nexport const getDeltaForNewState = (newState, correctValue, previousState) => {\n  const prevDelta = getDeltaForState(previousState, correctValue);\n  const curDelta = getDeltaForState(newState, correctValue);\n  const stateDelta = curDelta - prevDelta;\n  return stateDelta;\n};\n","import { FILLED, EMPTY, CROSS } from \"../cell/cellStates\";\nimport { soundEffects } from \"./soundEffects\";\n\nexport const soundStateMap = {\n  [FILLED]: soundEffects.filled,\n  [EMPTY]: soundEffects.empty,\n  [CROSS]: soundEffects.cross,\n};\n","import { soundStateMap } from \"../sound/soundStateMap\";\n\nexport const playSoundOnStateChange = (newState) => {\n  const soundArr = soundStateMap[newState];\n  const sound = soundArr.filter((el) => el.paused)[0] ?? soundArr[0];\n  sound.play();\n};\n","import { actionTypes } from \"./actions/actionTypes\";\nimport { changeCellContent } from \"./cell/changeCellContent\";\nimport {\n  getStateAfterMainAction,\n  getStateAfterSubAction,\n} from \"./cell/changeState\";\nimport { getDeltaForNewState } from \"./cell/getDeltaForNewState\";\nimport { playSoundOnStateChange } from \"./cell/playSoundOnStateChange\";\n\nexport class Cell {\n  #xLeft;\n\n  #yTop;\n\n  #state;\n\n  #correctVal;\n\n  #actions = actionTypes;\n\n  constructor(xLeft, yTop, currentState, correctValue) {\n    this.#xLeft = xLeft;\n    this.#yTop = yTop;\n    this.#state = currentState;\n    this.#correctVal = correctValue;\n  }\n\n  #changeState(newState, canvasContext, boardSettings, board) {\n    const prevState = this.#state;\n    this.#state = newState;\n    changeCellContent(canvasContext, this, boardSettings, board);\n    const stateDelta = getDeltaForNewState(\n      this.#state,\n      this.#correctVal,\n      prevState\n    );\n    return stateDelta;\n  }\n\n  getCellData() {\n    return {\n      x: this.#xLeft,\n      y: this.#yTop,\n      state: this.#state,\n    };\n  }\n\n  handleAction(actionType, canvasContext, boardSettings, board) {\n    const actions = this.#actions;\n    let newState;\n    switch (actionType) {\n      case actions.mainAction:\n        newState = getStateAfterMainAction(this.#state);\n        break;\n      case actions.subAction:\n        newState = getStateAfterSubAction(this.#state);\n        break;\n      default:\n        break;\n    }\n    playSoundOnStateChange(newState);\n    const stateDelta = this.#changeState(\n      newState,\n      canvasContext,\n      boardSettings,\n      board\n    );\n    return { newCellState: newState, stateDelta };\n  }\n}\n","import { FILLED, EMPTY, CROSS } from \"./cellStates\";\n\nexport const correctState = (stateToCheck) => {\n  let correctedState;\n  switch (stateToCheck) {\n    case FILLED:\n    case EMPTY:\n    case CROSS:\n      correctedState = stateToCheck;\n      break;\n    default:\n      correctedState = EMPTY;\n  }\n\n  return correctedState;\n};\n","import { Cell } from \"../Cell\";\nimport { correctState } from \"../cell/correctState\";\n\nexport const constructBoardCells = (\n  gameBoard,\n  puzzleMatrix,\n  boardStateMatrix\n) => {\n  const puzzle = puzzleMatrix;\n  const board = boardStateMatrix;\n  const numRow = puzzle.length;\n  const numCol = puzzle?.[0].length;\n  const boardCells = [...Array(numRow)].map(() => Array(numCol));\n\n  for (let iRow = 0; iRow < numRow; iRow += 1) {\n    const rowBoard = board?.[iRow];\n    const yTopCell = gameBoard.getCellCoordByIndex(iRow);\n    for (let jCol = 0; jCol < numCol; jCol += 1) {\n      const valueBoard = rowBoard?.[jCol] ?? 0;\n      const valueCorrect = puzzle[iRow]?.[jCol] ?? 0;\n      const stateBoard = correctState(valueBoard);\n      const stateCorrect = correctState(valueCorrect);\n      const xLeftCell = gameBoard.getCellCoordByIndex(jCol);\n      boardCells[iRow][jCol] = new Cell(\n        xLeftCell,\n        yTopCell,\n        stateBoard,\n        stateCorrect\n      );\n    }\n  }\n\n  return boardCells;\n};\n","import { EMPTY } from \"../cell/cellStates\";\nimport { getDeltaForState } from \"../cell/getDeltaForState\";\n\nexport const countSumCellsForPlayField = (boardStateMatrix, puzzleMatrix) => {\n  const puzzle = puzzleMatrix;\n  const board = boardStateMatrix;\n\n  let sumCells = 0;\n  for (let iRow = 0; iRow < board.length; iRow += 1) {\n    const rowBoard = board[iRow];\n    for (let jCol = 0; jCol < rowBoard.length; jCol += 1) {\n      const boardValue = rowBoard[jCol];\n      const correctValue = puzzle?.[iRow]?.[jCol] ?? EMPTY;\n      sumCells += getDeltaForState(boardValue, correctValue);\n    }\n  }\n  return sumCells;\n};\n","import { FILLED } from \"../cell/cellStates\";\n\nexport const countFilledCellsInPuzzle = (puzzleMatrixRef) => {\n  const isFilled = (value) => {\n    return value === FILLED;\n  };\n\n  let cntFilled = 0;\n  for (let iRow = 0; iRow < puzzleMatrixRef.length; iRow += 1) {\n    const rowPuzzle = puzzleMatrixRef[iRow];\n    const cntRowFilled = rowPuzzle.filter(isFilled).length;\n    cntFilled += cntRowFilled;\n  }\n  return cntFilled;\n};\n","import { EMPTY } from \"../cell/cellStates\";\n\nexport const initializeBoardStateMatrix = (puzzleMatrix) => {\n  const numRows = puzzleMatrix.length;\n  const numCols = puzzleMatrix?.[0].length ?? 0;\n  const boardStateMatrix = [...Array(numRows)].map(() =>\n    Array(numCols).fill(EMPTY)\n  );\n  return boardStateMatrix;\n};\n","export const isEmptyBoardStateMatrix = (boardStateMatrix) => {\n  return boardStateMatrix.length === 0;\n};\n","import { soundEffects } from \"../sound/soundEffects\";\n\nexport const playSoundOnWin = () => {\n  const soundArr = soundEffects.win;\n  const sound = soundArr.filter((el) => el.paused)[0] ?? soundArr[0];\n  sound.play();\n};\n","import { stateToChar } from \"../cell/cellStates\";\n\nexport const encodePuzzle = (puzzleMatrix) => {\n  const getValCounterStr = (counter, value) => {\n    let valCounterStr = \"\";\n    if (counter > 2) {\n      valCounterStr = `${value}${counter}`;\n    } else if (counter === 2) {\n      valCounterStr = `${value}${value}`;\n    } else if (counter === 1) {\n      valCounterStr = `${value}`;\n    }\n    return valCounterStr;\n  };\n\n  const rowNum = puzzleMatrix.length;\n  const colNum = puzzleMatrix?.[0].length ?? 0;\n  const sizePrefix = `${rowNum}.${colNum}.`;\n  const puzzleFlat = puzzleMatrix.flat();\n\n  let puzzleStr = sizePrefix;\n  let curCounter = 0;\n  let prevVal = \"\";\n  for (let i = 0; i < puzzleFlat.length; i += 1) {\n    const elem = puzzleFlat[i];\n    const curVal = stateToChar[elem];\n    if (curVal === prevVal) {\n      curCounter += 1;\n    } else {\n      puzzleStr += getValCounterStr(curCounter, prevVal);\n      curCounter = 1;\n      prevVal = curVal;\n    }\n  }\n  puzzleStr += getValCounterStr(curCounter, prevVal);\n  return puzzleStr;\n};\n","import { FILLED, EMPTY, CROSS } from \"./cellStates\";\nimport { fillCellWithColor } from \"./fillCellWithColor\";\nimport { fillCellWithCross } from \"./fillCellWithCross\";\nimport { makeCellTransparent } from \"./makeCellTransparent\";\n\nexport const changeCellsContentToBoardState = (gameBoard, boardCells) => {\n  const ctx = gameBoard.getCanvasContext();\n  const { cellSizePx, filledCellBg, cross } = gameBoard.getBoardSettings();\n  const { cluesWidth, cluesHeight } = gameBoard.getBoard();\n  for (let iRow = 0; iRow < boardCells.length; iRow += 1) {\n    const rowCells = boardCells[iRow];\n    for (let jCol = 0; jCol < rowCells.length; jCol += 1) {\n      const cellRef = rowCells[jCol];\n      const cell = cellRef.getCellData();\n      cell.x += cluesWidth;\n      cell.y += cluesHeight;\n      let fillColor;\n      switch (cell.state) {\n        case EMPTY:\n          makeCellTransparent(ctx, cell, cellSizePx);\n          break;\n        case FILLED:\n          fillColor = filledCellBg;\n          fillCellWithColor(ctx, cell, cellSizePx, fillColor);\n          break;\n        case CROSS:\n          fillCellWithCross(ctx, cell, cellSizePx, cross);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n};\n","import { constructBoardCells } from \"./play-field/constructBoardCells\";\nimport { countSumCellsForPlayField } from \"./play-field/countSumCellsForPlayField\";\nimport { countFilledCellsInPuzzle } from \"./play-field/countFilledCellsInPuzzle\";\nimport { initializeBoardStateMatrix } from \"./play-field/initializeBoardStateMatrix\";\nimport { isEmptyBoardStateMatrix } from \"./play-field/isEmptyBoardStateMatrix\";\nimport { playSoundOnWin } from \"./play-field/playSoundOnWin\";\nimport { encodePuzzle } from \"./game/encodePuzzle\";\nimport { changeCellsContentToBoardState } from \"./cell/changeCellsContentToBoardState\";\n\nexport class PlayField {\n  #gameBoard;\n\n  #puzzleMatrix;\n\n  #numFilledCellsPuzzle;\n\n  #sumCellsPlayField;\n\n  #boardStateMatrix;\n\n  #boardCells;\n\n  #stopWatch;\n\n  #gameApp;\n\n  constructor(gameBoard, puzzleMatrix, boardStateMatrix, stopWatch, gameApp) {\n    this.#gameBoard = gameBoard;\n    this.#stopWatch = stopWatch;\n    this.#gameApp = gameApp;\n    this.#puzzleMatrix = puzzleMatrix;\n    this.#numFilledCellsPuzzle = countFilledCellsInPuzzle(puzzleMatrix);\n    if (isEmptyBoardStateMatrix(boardStateMatrix)) {\n      this.#boardStateMatrix = initializeBoardStateMatrix(puzzleMatrix);\n      this.#sumCellsPlayField = -1 * this.#numFilledCellsPuzzle;\n    } else {\n      this.#boardStateMatrix = boardStateMatrix;\n      this.#sumCellsPlayField = countSumCellsForPlayField(\n        this.#boardStateMatrix,\n        this.#puzzleMatrix\n      );\n    }\n    this.#constructBoardCells();\n    if (!isEmptyBoardStateMatrix(boardStateMatrix)) {\n      this.#changeCellsContentToBoardState();\n    }\n  }\n\n  #constructBoardCells() {\n    if (\n      this.#puzzleMatrix.length !== this.#boardStateMatrix.length ||\n      this.#puzzleMatrix.length[0] !== this.#boardStateMatrix.length[0]\n    ) {\n      const messageText = \"Sorry, the saved nonogram could not be loaded\";\n      this.#gameApp.showDialog(messageText);\n    } else {\n      this.#boardCells = constructBoardCells(\n        this.#gameBoard,\n        this.#puzzleMatrix,\n        this.#boardStateMatrix\n      );\n    }\n  }\n\n  #changeCellsContentToBoardState() {\n    changeCellsContentToBoardState(this.#gameBoard, this.#boardCells);\n  }\n\n  #handleWinGame() {\n    playSoundOnWin();\n    this.#stopWatch.stop();\n    this.#gameBoard.blockPlayField();\n    this.#gameBoard.addLatestWin();\n    const timeInSec = this.#stopWatch.getTimeInSeconds();\n    const winMessageText = `Great! You have solved the nonogram in ${timeInSec} seconds!`;\n    this.#gameApp.showDialog(winMessageText);\n  }\n\n  handleAction(\n    cellIndexRow,\n    cellIndexColumn,\n    actionType,\n    canvasContext,\n    boardSettings,\n    board\n  ) {\n    const iRow = cellIndexRow;\n    const jCol = cellIndexColumn;\n    const cell = this.#boardCells[iRow][jCol];\n    const { newCellState, stateDelta } = cell.handleAction(\n      actionType,\n      canvasContext,\n      boardSettings,\n      board\n    );\n    this.#boardStateMatrix[iRow][jCol] = newCellState;\n    this.#sumCellsPlayField += stateDelta;\n    if (this.#sumCellsPlayField === this.#numFilledCellsPuzzle) {\n      this.#handleWinGame();\n    }\n  }\n\n  getBoardStateString() {\n    return encodePuzzle(this.#boardStateMatrix);\n  }\n}\n","export const getCellIndexByOneCoord = (\n  coord,\n  blockSize,\n  divideNumCells,\n  diffDividerRegLinePx,\n  cellWithLinePx\n) => {\n  const cntFullBlocks = Math.floor(coord / blockSize);\n  const coordShiftInBlock = (coord % blockSize) - diffDividerRegLinePx; // left half of divider -> previous cell\n  const cntFullCells = Math.floor(coordShiftInBlock / cellWithLinePx);\n  const idxBlockShift = cntFullBlocks * divideNumCells;\n  const idxCellShift = cntFullCells;\n  const cellIndex = idxBlockShift + idxCellShift;\n  return cellIndex;\n};\n","export const clearPlayField = (canvasContext, playAreaRect) => {\n  const ctx = canvasContext;\n  ctx.clearRect(...playAreaRect);\n};\n","import { gameAppNode } from \"./getGameAppNode\";\n\nexport const createGameBoardCanvas = () => {\n  const canvasSection = document.createElement(\"section\");\n  canvasSection.classList.add(\"gameboard\");\n  gameAppNode.appendChild(canvasSection);\n\n  const canvasNode = document.createElement(\"canvas\");\n  canvasNode.classList.add(\"gameboard__canvas\");\n  canvasSection.appendChild(canvasNode);\n\n  return canvasNode;\n};\n","export const getTextVertDeltaPx = (canvasContextRef) => {\n  const ctx = canvasContextRef;\n  const sampleString = \"0123456789\";\n  const textMetrics = ctx.measureText(sampleString);\n  const vertDelta =\n    (textMetrics.actualBoundingBoxAscent -\n      textMetrics.actualBoundingBoxDescent) /\n    2;\n\n  return vertDelta;\n};\n","import { countPuzzleRowsCols } from \"./game-board/countPuzzleRowsCols\";\nimport { drawGameBoardGrid } from \"./game-board/drawGameBoardGrid\";\nimport { getGameBoardSize } from \"./game-board/getGameBoardSize\";\nimport { setTextStyleForClues } from \"./game-board/setTextStyleForClues\";\nimport { drawSolution } from \"./game-board/drawSolution\";\nimport { writeClues } from \"./game-board/writeClues\";\nimport { PlayField } from \"./PlayField\";\nimport { getCoordShiftByIndex } from \"./game-board/getCoordShiftByIndex\";\nimport { getCellIndexByOneCoord } from \"./game-board/getCellIndexByOneCoord\";\nimport { actionTypes } from \"./actions/actionTypes\";\nimport { clearPlayField } from \"./play-field/clearPlayField\";\nimport { createGameBoardCanvas } from \"./layout/createGameBoardCanvas\";\nimport { getTextVertDeltaPx } from \"./game-board/getTextVertDeltaPx\";\n\nexport class GameBoard {\n  #canvasNode;\n\n  #canvasContext;\n\n  #playField;\n\n  #isInPlayMode;\n\n  #board = {\n    width: 0,\n    height: 0,\n    cluesWidth: 0,\n    cluesHeight: 0,\n    blockSize: 0, // block - five cells with one divider and four lines if `divideNumCells` = 5\n    textVertDeltaPx: 0, // delta to vertically align text for a given font, calculates for a given font\n  };\n\n  #playArea = {\n    rows: 0,\n    cols: 0,\n    rectPath: new Path2D(), // path of the playArea to detect mouse events\n    rect: [], // rect coordinates for clearRect (x, y, width, height)\n  };\n\n  #clues = {\n    rows: 0,\n    cols: 0,\n  };\n\n  #boardSettings = {\n    cellSizePx: 18,\n    lineWidthPx: 1,\n    dividerWidthPx: 2,\n    divideNumCells: 5, // number of cells in one group/block\n    cluesFont: \"normal 500 16px 'El Messiri', 'Verdana', sans-serif\",\n    cluesColor: \"#1c1c19\",\n    lineColor: \"#939189\",\n    dividerColor: \"#767672\",\n    filledCellBg: \"#1c1c19\",\n    cross: {\n      color: \"#1c1c19\",\n      lineWidth: 1,\n      margin: 1, // margin from the cell border\n    },\n  };\n\n  #puzzleMatrix;\n\n  #puzzleClues;\n\n  #actions = actionTypes;\n\n  #hasEventListeners = false;\n\n  #stopWatch;\n\n  #isStopWatchStarted = false;\n\n  #game;\n\n  #gameApp;\n\n  constructor(stopWatch, game, gameApp) {\n    this.#game = game;\n    this.#canvasNode = createGameBoardCanvas();\n    this.#canvasContext = this.#canvasNode.getContext(\"2d\");\n    this.#stopWatch = stopWatch;\n    this.#gameApp = gameApp;\n  }\n\n  #setTextStyleForClues() {\n    setTextStyleForClues(this.#canvasContext, this.#boardSettings);\n  }\n\n  #setTextVertDelta() {\n    this.#board.textVertDeltaPx = getTextVertDeltaPx(this.#canvasContext);\n  }\n\n  #setCountRowsCols() {\n    const { numRowForPuzzle, numColForPuzzle, numRowForClues, numColForClues } =\n      countPuzzleRowsCols(this.#puzzleMatrix, this.#puzzleClues);\n    this.#playArea.rows = numRowForPuzzle;\n    this.#playArea.cols = numColForPuzzle;\n    this.#clues.rows = numRowForClues;\n    this.#clues.cols = numColForClues;\n  }\n\n  #setBoardSize() {\n    const { boardWidth, boardHeight, cluesWidth, cluesHeight, blockSize } =\n      getGameBoardSize(this.#playArea, this.#clues, this.#boardSettings);\n    this.#canvasNode.width = boardWidth;\n    this.#canvasNode.height = boardHeight;\n    this.#board.width = boardWidth;\n    this.#board.height = boardHeight;\n    this.#board.cluesWidth = cluesWidth;\n    this.#board.cluesHeight = cluesHeight;\n    this.#board.blockSize = blockSize;\n    this.#setPlayFieldPath2D();\n  }\n\n  #setPlayFieldPath2D() {\n    const board = this.#board;\n    const boardSettings = this.#boardSettings;\n    const diffDividerRegLinePx =\n      boardSettings.dividerWidthPx - boardSettings.lineWidthPx;\n    const xLeft = board.cluesWidth + diffDividerRegLinePx; // exclude outside divider part from play field\n    const yTop = board.cluesHeight + diffDividerRegLinePx;\n    const width = board.width - xLeft - boardSettings.dividerWidthPx;\n    const height = board.height - yTop - boardSettings.dividerWidthPx;\n    const playFieldPath2D = new Path2D();\n    playFieldPath2D.rect(xLeft, yTop, width, height);\n    this.#playArea.rectPath = playFieldPath2D;\n    this.#playArea.rect = [xLeft, yTop, width, height];\n  }\n\n  #drawBoardGrid() {\n    drawGameBoardGrid(\n      this.#canvasContext,\n      this.#playArea,\n      this.#clues,\n      this.#board,\n      this.#boardSettings\n    );\n  }\n\n  #writeClues() {\n    writeClues(\n      this.#canvasContext,\n      this.#clues,\n      this.#puzzleClues,\n      this.#board,\n      this.#boardSettings\n    );\n  }\n\n  #triggerEventInsidePlayField(event, actionType) {\n    const ctx = this.#canvasContext;\n    const isInsidePlayArea = ctx.isPointInPath(\n      this.#playArea.rectPath,\n      event.offsetX,\n      event.offsetY\n    );\n    if (isInsidePlayArea) {\n      if (!this.#isStopWatchStarted) {\n        this.#stopWatch.start();\n        this.#isStopWatchStarted = true;\n      }\n      const xInPlayArea = event.offsetX - this.#board.cluesWidth;\n      const yInPlayArea = event.offsetY - this.#board.cluesHeight;\n      const idxRow = this.getCellIndexByCoord(yInPlayArea);\n      const idxCol = this.getCellIndexByCoord(xInPlayArea);\n      this.#playField.handleAction(\n        idxRow,\n        idxCol,\n        actionType,\n        this.#canvasContext,\n        this.#boardSettings,\n        this.#board\n      );\n    }\n  }\n\n  #addListeners() {\n    if (this.#hasEventListeners) {\n      return;\n    }\n    const canvasNode = this.#canvasNode;\n    const actions = Object.values(this.#actions);\n    actions.forEach((actionType) =>\n      canvasNode.addEventListener(actionType, (event) => {\n        event.preventDefault();\n        if (this.#isInPlayMode) {\n          this.#triggerEventInsidePlayField(event, actionType);\n        }\n      })\n    );\n    this.#hasEventListeners = true;\n  }\n\n  getCellCoordByIndex(index) {\n    return getCoordShiftByIndex(\n      index,\n      this.#board.blockSize,\n      this.#boardSettings.divideNumCells,\n      this.#boardSettings.dividerWidthPx,\n      this.#boardSettings.cellSizePx + this.#boardSettings.lineWidthPx\n    );\n  }\n\n  getCellIndexByCoord(coordinate) {\n    return getCellIndexByOneCoord(\n      coordinate,\n      this.#board.blockSize,\n      this.#boardSettings.divideNumCells,\n      this.#boardSettings.dividerWidthPx - this.#boardSettings.lineWidthPx,\n      this.#boardSettings.cellSizePx + this.#boardSettings.lineWidthPx\n    );\n  }\n\n  drawBoard(puzzleMatrix, puzzleClues, boardStateMatrix, timeSec) {\n    this.#puzzleMatrix = puzzleMatrix;\n    this.#puzzleClues = puzzleClues;\n    this.#setCountRowsCols();\n    this.#setBoardSize();\n    this.#drawBoardGrid();\n    this.#setTextStyleForClues();\n    this.#setTextVertDelta();\n    this.#writeClues();\n    this.#playField = new PlayField(\n      this,\n      puzzleMatrix,\n      boardStateMatrix,\n      this.#stopWatch,\n      this.#gameApp\n    );\n    this.#addListeners();\n    this.#isInPlayMode = true;\n    this.#stopWatch.stop();\n    const isRestartTimer = timeSec > 0;\n    this.#stopWatch.initialize(isRestartTimer, timeSec);\n    this.#isStopWatchStarted = false;\n  }\n\n  drawSolution() {\n    this.#isInPlayMode = false;\n    this.#stopWatch.stop();\n    this.#stopWatch.initialize(false, 0);\n    this.#isStopWatchStarted = false;\n    drawSolution(\n      this.#canvasContext,\n      this.#puzzleMatrix,\n      this.#board,\n      this.#boardSettings\n    );\n  }\n\n  resetGame() {\n    const emptyBoardStateMatrix = [];\n    clearPlayField(this.#canvasContext, this.#playArea.rect);\n    this.#drawBoardGrid();\n    this.#playField = new PlayField(\n      this,\n      this.#puzzleMatrix,\n      emptyBoardStateMatrix,\n      this.#stopWatch,\n      this.#gameApp\n    );\n    this.#addListeners();\n    this.#isInPlayMode = true;\n    this.#stopWatch.stop();\n    this.#stopWatch.initialize(false, 0);\n    this.#isStopWatchStarted = false;\n  }\n\n  addLatestWin() {\n    this.#game.addLatestWin();\n  }\n\n  blockPlayField() {\n    this.#isInPlayMode = false;\n  }\n\n  getBoardStateString() {\n    const isActiveGame = this.#isInPlayMode && this.#isStopWatchStarted;\n    const boardStateStr = isActiveGame\n      ? this.#playField.getBoardStateString()\n      : \"\";\n    return boardStateStr;\n  }\n\n  getBoardSettings() {\n    return this.#boardSettings;\n  }\n\n  getBoard() {\n    return this.#board;\n  }\n\n  getCanvasContext() {\n    return this.#canvasContext;\n  }\n\n  pauseStopWatch() {\n    this.#stopWatch.stop();\n    this.#isStopWatchStarted = false;\n  }\n}\n","export const formatTimeInSec = (timeInSec) => {\n  const numToStrWithZeroPad = (number) => {\n    return number.toString().padStart(2, \"0\");\n  };\n\n  const secInMin = 60;\n  const minInHour = 60;\n  const hoursNum = Math.floor(timeInSec / (secInMin * minInHour));\n  const minutesNum = Math.floor(timeInSec / secInMin) % minInHour;\n  const secondsNum = timeInSec % minInHour;\n  const hoursStr = numToStrWithZeroPad(hoursNum);\n  const minutesStr = numToStrWithZeroPad(minutesNum);\n  const secondsStr = numToStrWithZeroPad(secondsNum);\n  const timeStr =\n    hoursNum === 0\n      ? `${minutesStr}:${secondsStr}`\n      : `${hoursStr}:${minutesStr}:${secondsStr}`;\n  return timeStr;\n};\n","import { formatTimeInSec } from \"./stop-watch/formatTimeInSec\";\n\nexport class StopWatch {\n  #elapsedTimeSec;\n\n  #startTimeMSec;\n\n  #intervalId;\n\n  #mSecInSec = 1000;\n\n  #stopWatchNode;\n\n  constructor(stopWatchNode) {\n    this.#stopWatchNode = stopWatchNode;\n  }\n\n  updateTimeInSec() {\n    const currTimeInMSec = Date.now();\n    const elapsedTimeMSec = currTimeInMSec - this.#startTimeMSec;\n    this.#elapsedTimeSec = Math.floor(elapsedTimeMSec / this.#mSecInSec);\n    this.#stopWatchNode.innerText = this.getTimeFormatted();\n  }\n\n  initialize(isRestart, elapsedTimeSecSaved) {\n    const elapsedTimeSecZero = 0;\n    this.#elapsedTimeSec = isRestart ? elapsedTimeSecSaved : elapsedTimeSecZero;\n    this.#stopWatchNode.innerText = this.getTimeFormatted();\n  }\n\n  start() {\n    const startTimeInMSec = Date.now();\n    const oneSecInMSec = 1000;\n    this.#startTimeMSec =\n      startTimeInMSec - this.#elapsedTimeSec * this.#mSecInSec;\n    this.#intervalId = setInterval(\n      this.updateTimeInSec.bind(this),\n      oneSecInMSec\n    );\n  }\n\n  stop() {\n    const stopTimeInMSec = Date.now();\n    clearInterval(this.#intervalId);\n    this.#intervalId = null;\n    const elapsedTimeMSec = stopTimeInMSec - this.#startTimeMSec;\n    this.#elapsedTimeSec = Math.floor(elapsedTimeMSec / this.#mSecInSec);\n    this.#stopWatchNode.innerText = this.getTimeFormatted();\n  }\n\n  reset() {\n    this.stop();\n    this.#elapsedTimeSec = 0;\n  }\n\n  getTimeInSeconds() {\n    return this.#elapsedTimeSec;\n  }\n\n  getTimeFormatted() {\n    const timeStr = formatTimeInSec(this.#elapsedTimeSec);\n    return timeStr;\n  }\n}\n","export const getLatestWins = () => {\n  const latestWinsDefaultArr = \"[]\";\n  const latestWinsArr = JSON.parse(\n    localStorage.latestWins ?? latestWinsDefaultArr\n  );\n  return latestWinsArr;\n};\n","import { getLatestWins } from \"./getLatestWins\";\n\nexport const addLatestWin = (\n  nonogramId,\n  nonogramName,\n  nonogramLevel,\n  timeFormattedStr,\n  timeSeconds\n) => {\n  const latestWins = getLatestWins();\n  const currentWin = {\n    id: nonogramId,\n    name: nonogramName,\n    level: nonogramLevel,\n    time: timeFormattedStr,\n    timeSec: timeSeconds,\n  };\n  latestWins.push(currentWin);\n  while (latestWins.length > 5) {\n    latestWins.shift();\n  }\n  localStorage.setItem(\"latestWins\", JSON.stringify(latestWins));\n};\n","import { getLatestWins } from \"./getLatestWins\";\n\nexport const getSortedLatestWins = () => {\n  const compareByTimeInSeconds = (a, b) => {\n    return a.timeSec - b.timeSec;\n  };\n\n  const latestWins = getLatestWins();\n  const latestWinsSorted = [...latestWins].sort(compareByTimeInSeconds);\n  return latestWinsSorted;\n};\n","import { getSortedLatestWins } from \"../../latest-wins/getSortedLatestWins\";\n\nexport const updateLatestWinsNodes = (winsListNodes) => {\n  const latestWins = getSortedLatestWins();\n  const cols = [\"time\", \"name\", \"level\"];\n\n  for (let i = 0; i < winsListNodes.length; i += 1) {\n    const winLine = winsListNodes[i];\n    for (let j = 0; j < cols.length; j += 1) {\n      const winNode = winLine[cols[j]];\n      winNode.innerText = latestWins?.[i]?.[cols[j]] ?? \"\";\n    }\n  }\n};\n","export const saveGameToLocalStorage = (nonogramId, timeSec, boardStateStr) => {\n  const gameStatus = { nonogramId, timeSec, boardStateStr };\n  localStorage.setItem(\"savedGame\", JSON.stringify(gameStatus));\n};\n","import { decodePuzzle } from \"./game/decodePuzzle\";\nimport { formPuzzleClues } from \"./game/formPuzzleClues\";\nimport { GameBoard } from \"./GameBoard\";\nimport { StopWatch } from \"./StopWatch\";\nimport { addLatestWin } from \"./latest-wins/addLatestWin\";\nimport { updateLatestWinsNodes } from \"./layout/latest-wins/updateLatestWinsNodes\";\nimport { saveGameToLocalStorage } from \"./game/saveGameToLocalStorage\";\n\nexport class Game {\n  #nonogram = {};\n\n  #gameBoard;\n\n  #isGameInProgress = false;\n\n  #stopWatch;\n\n  #latestWinsNodes;\n\n  #gameApp;\n\n  constructor(stopWatchNode, latestWinsNodes, gameApp) {\n    this.#stopWatch = new StopWatch(stopWatchNode);\n    this.#gameBoard = new GameBoard(this.#stopWatch, this, gameApp);\n    this.#latestWinsNodes = latestWinsNodes;\n    this.#gameApp = gameApp;\n  }\n\n  setNonogram(nonogram, boardStateMatrix, timeSec) {\n    this.#nonogram = nonogram;\n    const puzzleMatrix = decodePuzzle(this.#nonogram.puzzle);\n    const { rowsAllClues, colsAllClues } = formPuzzleClues(puzzleMatrix);\n    this.#gameBoard.drawBoard(\n      puzzleMatrix,\n      { rowsAllClues, colsAllClues },\n      boardStateMatrix,\n      timeSec\n    );\n  }\n\n  showSolution() {\n    this.#gameBoard.drawSolution();\n  }\n\n  resetGame() {\n    this.#gameBoard.resetGame();\n  }\n\n  saveGame() {\n    const nonogramId = this.#nonogram.id;\n    const timeSec = this.#stopWatch.getTimeInSeconds();\n    const boardStateStr = this.#gameBoard.getBoardStateString();\n    let messageText;\n    if (boardStateStr) {\n      this.#gameBoard.pauseStopWatch();\n      saveGameToLocalStorage(nonogramId, timeSec, boardStateStr);\n      messageText = \"The game has been saved\";\n    } else {\n      messageText =\n        \"Nothing to save: the nonogram has already been solved or has not yet been started\";\n    }\n    this.#gameApp.showDialog(messageText);\n  }\n\n  addLatestWin() {\n    addLatestWin(\n      this.#nonogram.id,\n      this.#nonogram.nameWithSize,\n      this.#nonogram.level,\n      this.#stopWatch.getTimeFormatted(),\n      this.#stopWatch.getTimeInSeconds()\n    );\n    updateLatestWinsNodes(this.#latestWinsNodes);\n  }\n}\n","import { updateLatestWinsNodes } from \"./updateLatestWinsNodes\";\nimport { gameAppNode } from \"../getGameAppNode\";\n\nexport const createLatestWinsNodes = () => {\n  const latestWinsSection = document.createElement(\"section\");\n  latestWinsSection.classList.add(\"latest-wins\");\n  gameAppNode.appendChild(latestWinsSection);\n\n  const latestWinsHeader = document.createElement(\"h2\");\n  latestWinsHeader.classList.add(\"latest-wins__header\");\n  latestWinsHeader.innerText = \"High Score Table\";\n  latestWinsSection.appendChild(latestWinsHeader);\n\n  const numWins = 5;\n  const cols = [\"time\", \"name\", \"level\"];\n  const winsListNodes = [];\n\n  for (let i = 0; i < numWins; i += 1) {\n    const winsLine = document.createElement(\"div\");\n    winsLine.classList.add(\"wins-line\");\n    const winNodes = {};\n\n    for (let j = 0; j < cols.length; j += 1) {\n      const winCol = document.createElement(\"div\");\n      const className = `wins-line__${cols[j]}`;\n      winCol.classList.add(className);\n      winNodes[cols[j]] = winCol;\n      winsLine.appendChild(winCol);\n    }\n    winsListNodes.push(winNodes);\n    latestWinsSection.appendChild(winsLine);\n  }\n\n  updateLatestWinsNodes(winsListNodes);\n\n  return { latestWinsSection, latestWinsNodes: winsListNodes };\n};\n","import { gameAppNode } from \"../getGameAppNode\";\n\nexport const createSelectGameSection = () => {\n  const selectGameSection = document.createElement(\"section\");\n  selectGameSection.classList.add(\"select-game\");\n  gameAppNode.appendChild(selectGameSection);\n\n  const divLevelBlock = document.createElement(\"div\");\n  divLevelBlock.classList.add(\"select-game__item\", \"level\");\n  selectGameSection.appendChild(divLevelBlock);\n\n  const levelLabel = document.createElement(\"label\");\n  levelLabel.classList.add(\"level__label\", \"label\");\n  levelLabel.htmlFor = \"level-select\";\n  levelLabel.innerText = \"Level\";\n  divLevelBlock.appendChild(levelLabel);\n\n  const levelSelect = document.createElement(\"select\");\n  levelSelect.classList.add(\"level__select\", \"select\");\n  levelSelect.id = \"level-select\";\n  levelSelect.name = \"levels\";\n  divLevelBlock.appendChild(levelSelect);\n\n  const divNonogramBlock = document.createElement(\"div\");\n  divNonogramBlock.classList.add(\"select-game__item\", \"nonogram\");\n  selectGameSection.appendChild(divNonogramBlock);\n\n  const nonogramLabel = document.createElement(\"label\");\n  nonogramLabel.classList.add(\"nonogram__label\", \"label\");\n  nonogramLabel.htmlFor = \"nonogram-select\";\n  nonogramLabel.innerText = \"Nonogram\";\n  divNonogramBlock.appendChild(nonogramLabel);\n\n  const nonogramSelect = document.createElement(\"select\");\n  nonogramSelect.classList.add(\"nonogram__select\", \"select\");\n  nonogramSelect.id = \"nonogram-select\";\n  nonogramSelect.name = \"nonograms\";\n  divNonogramBlock.appendChild(nonogramSelect);\n\n  return { levelSelect, nonogramSelect };\n};\n","export const createLevelOptions = (nonogramsList, levelSelectRef) => {\n  const levelSelect = levelSelectRef;\n  const levels = [...new Set(nonogramsList.map((nonogram) => nonogram.level))];\n\n  for (let i = 0; i < levels.length; i += 1) {\n    const levelName = levels[i];\n    const levelOption = document.createElement(\"option\");\n    levelOption.classList.add(\"select__option\");\n    levelOption.value = levelName;\n    levelOption.innerText = levelName;\n    levelOption.selected = i === 0;\n    levelSelect.appendChild(levelOption);\n  }\n  levelSelect.selectedIndex = 0;\n\n  return levels;\n};\n","export const createNonogramOptions = (levels, nonogramsList) => {\n  const nonogramOptionNodesByLevel = [];\n\n  for (let iLevel = 0; iLevel < levels.length; iLevel += 1) {\n    const levelName = levels[iLevel];\n    const levelNonograms = nonogramsList.filter(\n      (nonogram) => nonogram.level === levelName\n    );\n    const levelNonogramsNodes = [];\n    for (let jNongr = 0; jNongr < levelNonograms.length; jNongr += 1) {\n      const nonogram = levelNonograms[jNongr];\n      const nonogramId = nonogram.id;\n      const nonogramName = nonogram.nameWithSize;\n      const nonogramOption = document.createElement(\"option\");\n      nonogramOption.classList.add(\"select__option\");\n      nonogramOption.value = nonogramId;\n      nonogramOption.innerText = nonogramName;\n      nonogramOption.selected = jNongr === 0;\n      levelNonogramsNodes.push(nonogramOption);\n    }\n    nonogramOptionNodesByLevel.push(levelNonogramsNodes);\n  }\n\n  return nonogramOptionNodesByLevel;\n};\n","export const handleLevelChange = (\n  levelSelectNode,\n  nonogramSelectNodeRef,\n  nonogramOptionNodesByLevel,\n  gameApp,\n  isTriggerChangeGameToPuzzle = true\n) => {\n  const nonogramSelectNode = nonogramSelectNodeRef;\n  const defaultLevelIdx = 0;\n  let levelIdx = levelSelectNode.selectedIndex;\n  levelIdx = levelIdx >= 0 ? levelIdx : defaultLevelIdx;\n\n  const levelNonogramNodes = nonogramOptionNodesByLevel[levelIdx];\n  nonogramSelectNode.replaceChildren(...levelNonogramNodes);\n  nonogramSelectNode.selectedIndex = 0;\n  const nonogramValueId = nonogramSelectNode.options[0].value;\n  if (isTriggerChangeGameToPuzzle) {\n    gameApp.changeGameToPuzzle(nonogramValueId);\n  }\n};\n","export const handleNonogramChange = (nonogramSelectNode, gameApp) => {\n  const defaultNonogramIdx = 0;\n  let nonogramIdx = nonogramSelectNode.selectedIndex;\n  nonogramIdx = nonogramIdx >= 0 ? nonogramIdx : defaultNonogramIdx;\n  const nonogramValueId = nonogramSelectNode.options[nonogramIdx].value;\n\n  gameApp.changeGameToPuzzle(nonogramValueId);\n};\n","import { gameAppNode } from \"./getGameAppNode\";\n\nexport const createStatusSection = () => {\n  const statusSection = document.createElement(\"section\");\n  statusSection.classList.add(\"status\");\n  gameAppNode.appendChild(statusSection);\n\n  const stopWatchBlock = document.createElement(\"div\");\n  stopWatchBlock.classList.add(\"status__stop-watch\", \"stop-watch\");\n  statusSection.appendChild(stopWatchBlock);\n\n  const stopWatchNode = document.createElement(\"div\");\n  stopWatchNode.classList.add(\"stop-watch__value\");\n  stopWatchBlock.appendChild(stopWatchNode);\n\n  const nonogramNameBlock = document.createElement(\"div\");\n  nonogramNameBlock.classList.add(\"status__nonogram-name\", \"nonogram-name\");\n  statusSection.appendChild(nonogramNameBlock);\n\n  const nonogramNameNode = document.createElement(\"div\");\n  nonogramNameNode.classList.add(\"nonogram-name__text\");\n  nonogramNameBlock.appendChild(nonogramNameNode);\n\n  return { stopWatchNode, nonogramNameNode };\n};\n","export const loadGameFromLocalStorage = () => {\n  const defaultSavedGame = JSON.stringify({\n    nonogramId: -1,\n  });\n  const savedGame = JSON.parse(localStorage.savedGame ?? defaultSavedGame);\n  const { nonogramId, timeSec, boardStateStr } = savedGame;\n  return { nonogramId, timeSec, boardStateStr };\n};\n","import { gameAppNode } from \"../getGameAppNode\";\n\nexport const createMessageDialog = () => {\n  const messageDialog = document.createElement(\"dialog\");\n  messageDialog.classList.add(\"message\");\n  gameAppNode.appendChild(messageDialog);\n\n  const msgText = document.createElement(\"div\");\n  msgText.classList.add(\"message__text\");\n  messageDialog.appendChild(msgText);\n\n  const msgCloseBtn = document.createElement(\"button\");\n  msgCloseBtn.classList.add(\"message__close\", \"btn\");\n  msgCloseBtn.type = \"button\";\n  msgCloseBtn.innerText = \"Close\";\n  messageDialog.appendChild(msgCloseBtn);\n\n  msgCloseBtn.addEventListener(\"click\", () => {\n    messageDialog.close();\n  });\n\n  return { messageDialog, msgText };\n};\n","export const showMessageDialog = (messageNodes, messageText) => {\n  const { dialogNode, textNode } = messageNodes;\n  textNode.innerText = messageText;\n  dialogNode.showModal();\n};\n","import { capitalizeWord } from \"./utils/capitalizeWord\";\nimport { Game } from \"./Game\";\nimport { createLatestWinsNodes } from \"./layout/latest-wins/createLatestWinsNodes\";\nimport { getSoundMuteValue } from \"./sound/getSoundMuteValue\";\nimport { getThemeName } from \"./theme/getThemeName\";\nimport { createSelectGameSection } from \"./layout/select-game/createSelectGameSection\";\nimport { createLevelOptions } from \"./layout/select-game/createLevelOptions\";\nimport { createNonogramOptions } from \"./layout/select-game/createNonogramOptions\";\nimport { handleLevelChange } from \"./layout/select-game/handleLevelChange\";\nimport { handleNonogramChange } from \"./layout/select-game/handleNonogramChange\";\nimport { createStatusSection } from \"./layout/createStatusSection\";\nimport { loadGameFromLocalStorage } from \"./game/loadGameFromLocalStorage\";\nimport { decodePuzzle } from \"./game/decodePuzzle\";\nimport { createMessageDialog } from \"./layout/message/createMessageDialog\";\nimport { showMessageDialog } from \"./layout/message/showMessageDialog\";\n\nexport default class GameApp {\n  #nonograms = [];\n\n  #activeNonogramId;\n\n  #game;\n\n  #levelSelectNode;\n\n  #nonogramSelectNode;\n\n  #nonogramOptionNodesByLevel;\n\n  #nonogramNameNode;\n\n  #message = {};\n\n  isSoundMuted;\n\n  themeName;\n\n  latestWinsSection;\n\n  constructor(nonogramsData) {\n    this.#createNonogramsArray(nonogramsData);\n    const { stopWatchNode, nonogramNameNode } = createStatusSection();\n    this.#nonogramNameNode = nonogramNameNode;\n    const { latestWinsSection, latestWinsNodes } = createLatestWinsNodes();\n    this.latestWinsSection = latestWinsSection;\n    const { messageDialog, msgText } = createMessageDialog();\n    this.#message.dialogNode = messageDialog;\n    this.#message.textNode = msgText;\n    this.#game = new Game(stopWatchNode, latestWinsNodes, this);\n    this.#createSelectNodes();\n    this.#addSelectNodesEventListeners();\n    this.isSoundMuted = getSoundMuteValue();\n    this.themeName = getThemeName();\n  }\n\n  #getNonogramById(nonogramId) {\n    return this.#nonograms[nonogramId];\n  }\n\n  #getRandomNonogramId() {\n    const randomId = Math.floor(Math.random() * this.#nonograms.length);\n    return randomId;\n  }\n\n  #createNonogramsArray(nonogramsData) {\n    this.#nonograms = nonogramsData.map((nonogram) => {\n      const capitalizedLevel = capitalizeWord(nonogram.level);\n      const capitalizedName = capitalizeWord(nonogram.name);\n      const sizeStr = `${nonogram.size[0]}x${nonogram.size[1]}`;\n      const nameWithSize = `${sizeStr} ${capitalizedName}`;\n      return {\n        id: nonogram.id,\n        level: capitalizedLevel,\n        nameWithSize,\n        puzzle: nonogram.puzzle,\n      };\n    });\n  }\n\n  #createSelectNodes() {\n    const nonogramsList = this.getNonogramsList();\n    const { levelSelect, nonogramSelect } = createSelectGameSection();\n    this.#levelSelectNode = levelSelect;\n    this.#nonogramSelectNode = nonogramSelect;\n    const levels = createLevelOptions(nonogramsList, this.#levelSelectNode);\n    this.#nonogramOptionNodesByLevel = createNonogramOptions(\n      levels,\n      nonogramsList\n    );\n    // add nonogram options for the initial level\n    handleLevelChange(\n      this.#levelSelectNode,\n      this.#nonogramSelectNode,\n      this.#nonogramOptionNodesByLevel,\n      this\n    );\n  }\n\n  #addSelectNodesEventListeners() {\n    this.#levelSelectNode.addEventListener(\"change\", () => {\n      handleLevelChange(\n        this.#levelSelectNode,\n        this.#nonogramSelectNode,\n        this.#nonogramOptionNodesByLevel,\n        this\n      );\n    });\n\n    this.#nonogramSelectNode.addEventListener(\"change\", () => {\n      handleNonogramChange(this.#nonogramSelectNode, this);\n    });\n  }\n\n  #changeNonogramSelectionById(\n    nonogramId,\n    isTriggerChangeEvent = true,\n    isTriggerChangeGameToPuzzle = true\n  ) {\n    const nonogram = this.#getNonogramById(nonogramId);\n    const levelOptions = [...this.#levelSelectNode.options];\n    const isSoughtForLevel = (option) => option.value === nonogram.level;\n    const levelSelectIdx = levelOptions.findIndex(isSoughtForLevel);\n    this.#levelSelectNode.selectedIndex = levelSelectIdx;\n    handleLevelChange(\n      this.#levelSelectNode,\n      this.#nonogramSelectNode,\n      this.#nonogramOptionNodesByLevel,\n      this,\n      isTriggerChangeGameToPuzzle\n    );\n\n    const nonogramsOptions = [...this.#nonogramSelectNode.options];\n    const isSoughtForNonogram = (option) =>\n      option.value === nonogram.id.toString();\n    const nonogramSelectIdx = nonogramsOptions.findIndex(isSoughtForNonogram);\n    this.#nonogramSelectNode.selectedIndex = nonogramSelectIdx;\n    if (isTriggerChangeEvent) {\n      this.#nonogramSelectNode.dispatchEvent(new Event(\"change\"));\n    }\n\n    this.#activeNonogramId = nonogramId;\n  }\n\n  getNonogramsList() {\n    const nonogramsList = this.#nonograms.map(\n      ({ id, level, nameWithSize }) => ({\n        id,\n        level,\n        nameWithSize,\n      })\n    );\n    return nonogramsList;\n  }\n\n  changeGameToPuzzle(nonogramId, boardStateMatrix = [], timeSec = 0) {\n    const nonogram = this.#getNonogramById(nonogramId);\n    this.#game.setNonogram(nonogram, boardStateMatrix, timeSec);\n    this.#nonogramNameNode.innerText = nonogram.nameWithSize;\n  }\n\n  showSolution() {\n    this.#game.showSolution();\n  }\n\n  showDialog(messageText) {\n    showMessageDialog(this.#message, messageText);\n  }\n\n  setRandomPuzzle() {\n    const currNonogramId = this.#activeNonogramId;\n    let newNonogramId = currNonogramId;\n    while (newNonogramId === currNonogramId) {\n      newNonogramId = this.#getRandomNonogramId();\n    }\n    this.#changeNonogramSelectionById(newNonogramId);\n  }\n\n  resetGame() {\n    this.#game.resetGame();\n  }\n\n  saveGame() {\n    this.#game.saveGame();\n  }\n\n  loadGame() {\n    const {\n      nonogramId: nonogramDataID,\n      timeSec,\n      boardStateStr,\n    } = loadGameFromLocalStorage();\n    if (nonogramDataID === -1) {\n      const messageText = \"Nothing to load: no saved game\";\n      this.showDialog(messageText);\n    } else {\n      const dataIdToId = new Map(\n        this.#nonograms.map((nonogram, idx) => [nonogram.id, idx])\n      );\n      if (dataIdToId.has(nonogramDataID)) {\n        const nonogramId = dataIdToId.get(nonogramDataID);\n        const boardStateMatrix = decodePuzzle(boardStateStr);\n        this.#changeNonogramSelectionById(nonogramId, false, false);\n        this.changeGameToPuzzle(nonogramId, boardStateMatrix, timeSec);\n      } else {\n        const messageText = \"Sorry, the saved nonogram was not found\";\n        this.showDialog(messageText);\n      }\n    }\n  }\n}\n","import { gameAppNode } from \"./getGameAppNode\";\n\nexport const createActionButtonsSection = () => {\n  const actionsSection = document.createElement(\"section\");\n  actionsSection.classList.add(\"actions\");\n  gameAppNode.appendChild(actionsSection);\n\n  const actionBtns = [\n    \"Reset game\",\n    \"Save game\",\n    \"Continue last game\",\n    \"Solution\",\n  ];\n\n  const actionBtnsNodes = [];\n  for (let i = 0; i < actionBtns.length; i += 1) {\n    const actionBtn = document.createElement(\"button\");\n    actionBtn.classList.add(\"actions__btn\", \"btn\");\n    actionBtn.type = \"button\";\n    actionBtn.innerText = actionBtns[i];\n    actionsSection.appendChild(actionBtn);\n    actionBtnsNodes.push(actionBtn);\n  }\n\n  const [, , loadBtn, solutionBtn] = actionBtnsNodes;\n  loadBtn.classList.add(\"actions__btn_hidden-mobile\");\n  solutionBtn.classList.add(\"actions__btn_hidden-mobile\");\n\n  return actionBtnsNodes;\n};\n","import LogoSvg from \"../../assets/images/logo.svg\";\n\nimport { gameAppNode } from \"./getGameAppNode\";\n\nexport const createHeader = () => {\n  const header = document.createElement(\"header\");\n  header.classList.add(\"header\");\n  gameAppNode.appendChild(header);\n\n  const divLogo = document.createElement(\"div\");\n  divLogo.classList.add(\"header__logo\");\n  header.appendChild(divLogo);\n  divLogo.innerHTML = LogoSvg;\n  const logo = divLogo.firstChild;\n  logo.classList.add(\"logo\");\n\n  const title = document.createElement(\"h1\");\n  title.classList.add(\"header__title\");\n  title.innerText = \"Nonograms\";\n  header.appendChild(title);\n};\n","import { gameAppNode } from \"./getGameAppNode\";\n\nexport const createRandomButton = () => {\n  const randomSection = document.createElement(\"section\");\n  randomSection.classList.add(\"random\");\n  gameAppNode.appendChild(randomSection);\n\n  const randomBtn = document.createElement(\"button\");\n  randomBtn.classList.add(\"random__btn\", \"btn\");\n  randomBtn.type = \"button\";\n  randomBtn.innerText = \"Random game\";\n  randomSection.appendChild(randomBtn);\n\n  return randomBtn;\n};\n","import VolUpSvg from \"../../assets/icons/volume_up.svg\";\nimport VolOffSvg from \"../../assets/icons/volume_off.svg\";\nimport LightModeSvg from \"../../assets/icons/light_mode.svg\";\nimport DarkModeSvg from \"../../assets/icons/dark_mode.svg\";\nimport BurgerToOpenSvg from \"../../assets/icons/burger_to_open.svg\";\nimport BurgerToCloseSvg from \"../../assets/icons/burger_to_close.svg\";\nimport { getSoundMuteValue } from \"../sound/getSoundMuteValue\";\nimport { getThemeName } from \"../theme/getThemeName\";\nimport { gameAppNode } from \"./getGameAppNode\";\n\nexport const createSettingsButtons = () => {\n  const settingsSection = document.createElement(\"section\");\n  settingsSection.classList.add(\"settings\");\n  gameAppNode.appendChild(settingsSection);\n\n  const soundBtn = document.createElement(\"button\");\n  soundBtn.classList.add(\"settings__sound\", \"btn\", \"btn_round\");\n  soundBtn.type = \"button\";\n  const isSoundOff = getSoundMuteValue();\n  soundBtn.innerHTML = isSoundOff ? VolOffSvg : VolUpSvg;\n  soundBtn.firstChild.classList.add(\"btn__icon\");\n  settingsSection.appendChild(soundBtn);\n\n  const themeBtn = document.createElement(\"button\");\n  themeBtn.classList.add(\"settings__theme\", \"btn\", \"btn_round\");\n  themeBtn.type = \"button\";\n  const themeName = getThemeName();\n  themeBtn.innerHTML = themeName === \"light\" ? LightModeSvg : DarkModeSvg;\n  themeBtn.firstChild.classList.add(\"btn__icon\");\n  settingsSection.appendChild(themeBtn);\n\n  const burgerBtn = document.createElement(\"button\");\n  burgerBtn.classList.add(\"settings__burger\", \"btn\", \"btn_round\");\n  burgerBtn.type = \"button\";\n  // TODO: get state of the burger menu\n  const isBurgerClose = true;\n  burgerBtn.innerHTML = isBurgerClose ? BurgerToOpenSvg : BurgerToCloseSvg;\n  burgerBtn.firstChild.classList.add(\"btn__icon\");\n  settingsSection.appendChild(burgerBtn);\n\n  return { soundBtn, themeBtn, burgerBtn };\n};\n","const createGameAppNode = () => {\n  const gameAppNode = document.createElement(\"div\");\n  gameAppNode.classList.add(\"game-app\");\n  document.body.appendChild(gameAppNode);\n\n  return gameAppNode;\n};\n\nconst gameAppNode = createGameAppNode();\n\nexport { gameAppNode };\n","export const closeHamburgerMenu = (\n  hambSection,\n  drawerOverlayHamburg,\n  burgerBtn,\n  BurgerToOpenSvg\n) => {\n  const btnHamburg = burgerBtn;\n  const htmlElement = document.documentElement;\n  htmlElement.classList.remove(\"no-scroll\");\n  hambSection.classList.remove(\"hamburger_open_main\");\n  drawerOverlayHamburg.classList.remove(\"drawer-overlay_show\");\n  hambSection.classList.remove(\"hamburger_show\");\n  btnHamburg.innerHTML = BurgerToOpenSvg;\n  btnHamburg.firstChild.classList.add(\"btn__icon\");\n};\n","import { gameAppNode } from \"../getGameAppNode\";\n\nexport const createDrawerOverlayHamburg = () => {\n  const drawerOverlayHamburg = document.createElement(\"div\");\n  drawerOverlayHamburg.classList.add(\n    \"drawer-overlay\",\n    \"drawer-overlay_hamburg\"\n  );\n  gameAppNode.appendChild(drawerOverlayHamburg);\n\n  return drawerOverlayHamburg;\n};\n","import { gameAppNode } from \"../getGameAppNode\";\n\nexport const createDrawerOverlayLatestWins = () => {\n  const drawerOverlayLatestWins = document.createElement(\"div\");\n  drawerOverlayLatestWins.classList.add(\n    \"drawer-overlay\",\n    \"drawer-overlay_wins\"\n  );\n  gameAppNode.appendChild(drawerOverlayLatestWins);\n\n  return drawerOverlayLatestWins;\n};\n","import { gameAppNode } from \"../getGameAppNode\";\n\nexport const createHamburgerSection = () => {\n  const hambSection = document.createElement(\"section\");\n  hambSection.classList.add(\"hamburger\");\n  gameAppNode.appendChild(hambSection);\n\n  const hambBtns = [\n    \"High Score Table\",\n    \"Random game\",\n    \"Continue last game\",\n    \"Solution\",\n  ];\n\n  const hambBtnsNodes = [];\n  for (let i = 0; i < hambBtns.length; i += 1) {\n    const hambBtn = document.createElement(\"button\");\n    hambBtn.classList.add(\"hamburger__btn\", \"btn\", \"btn_text\");\n    hambBtn.type = \"button\";\n    hambBtn.innerText = hambBtns[i];\n    hambSection.appendChild(hambBtn);\n    hambBtnsNodes.push(hambBtn);\n  }\n\n  return { hambSection, hambBtnsNodes };\n};\n","export const openHamburgerMenu = (\n  hambSection,\n  drawerOverlayHamburg,\n  burgerBtn,\n  BurgerToCloseSvg\n) => {\n  const btnHamburg = burgerBtn;\n  const htmlElement = document.documentElement;\n  htmlElement.classList.add(\"no-scroll\");\n  hambSection.classList.add(\"hamburger_open_main\");\n  drawerOverlayHamburg.classList.add(\"drawer-overlay_show\");\n  hambSection.classList.add(\"hamburger_show\");\n  btnHamburg.innerHTML = BurgerToCloseSvg;\n  btnHamburg.firstChild.classList.add(\"btn__icon\");\n};\n","import { hideHamburgerLatestWins } from \"./hideHamburgerLatestWins\";\nimport { closeHamburgerMenu } from \"./closeHamburgerMenu\";\nimport { openHamburgerMenu } from \"./openHamburgerMenu\";\n\nexport const handleHamburgBtnClick = (\n  hambSection,\n  latestWinsSection,\n  drawerOverlayHamburg,\n  drawerOverlayLatestWins,\n  burgerBtn,\n  BurgerToOpenSvg,\n  BurgerToCloseSvg\n) => {\n  if (hambSection.classList.contains(\"hamburger_open_wins\")) {\n    hideHamburgerLatestWins(\n      hambSection,\n      latestWinsSection,\n      drawerOverlayLatestWins\n    );\n  } else if (hambSection.classList.contains(\"hamburger_open_main\")) {\n    closeHamburgerMenu(\n      hambSection,\n      drawerOverlayHamburg,\n      burgerBtn,\n      BurgerToOpenSvg\n    );\n  } else {\n    openHamburgerMenu(\n      hambSection,\n      drawerOverlayHamburg,\n      burgerBtn,\n      BurgerToCloseSvg\n    );\n  }\n};\n","export const hideHamburgerLatestWins = (\n  hambSection,\n  latestWinsSection,\n  drawerOverlayLatestWins\n) => {\n  hambSection.classList.remove(\"hamburger_open_wins\");\n  latestWinsSection.classList.remove(\"latest-wins_show-in-hamburger\");\n  drawerOverlayLatestWins.classList.remove(\"drawer-overlay_show\");\n};\n","export const showHamburgerLatestWins = (\n  hambSection,\n  latestWinsSection,\n  drawerOverlayLatestWins\n) => {\n  hambSection.classList.add(\"hamburger_open_wins\");\n  latestWinsSection.classList.add(\"latest-wins_show-in-hamburger\");\n  drawerOverlayLatestWins.classList.add(\"drawer-overlay_show\");\n};\n","import { changeSoundsMuteValue } from \"../sound/changeSoundsMuteValue\";\nimport { getSoundMuteValue } from \"../sound/getSoundMuteValue\";\n\nexport const restoreSoundSettings = () => {\n  const isSoundOff = getSoundMuteValue();\n  localStorage.setItem(\"soundOff\", JSON.stringify(isSoundOff));\n  changeSoundsMuteValue(isSoundOff);\n};\n","import { changeTheme } from \"../theme/changeTheme\";\n\nexport const restoreThemeSettings = () => {\n  const defaultThemeName = \"light\";\n  const themeName = localStorage.getItem(\"theme\") ?? defaultThemeName;\n  localStorage.setItem(\"theme\", themeName);\n  changeTheme(themeName);\n};\n","import { restoreSoundSettings } from \"./restoreSoundSettings\";\nimport { restoreThemeSettings } from \"./restoreThemeSettings\";\n\nexport const restoreSavedSettings = () => {\n  restoreSoundSettings();\n  restoreThemeSettings();\n};\n","import { soundEffects } from \"./soundEffects\";\n\nexport const changeSoundsMuteValue = (isMuted) => {\n  const soundsArrs = Object.values(soundEffects);\n  soundsArrs.forEach((soundArr) => {\n    soundArr.forEach((soundIn) => {\n      const sound = soundIn;\n      sound.muted = isMuted;\n    });\n  });\n  localStorage.setItem(\"soundOff\", JSON.stringify(isMuted));\n\n  return isMuted;\n};\n","export const getSoundMuteValue = () => {\n  const defaultIsSoundOff = \"false\";\n  const isSoundOff = JSON.parse(localStorage.soundOff ?? defaultIsSoundOff);\n  return isSoundOff;\n};\n","import AudioResCross from \"../../assets/sounds/cross/cross.mp3\";\nimport AudioResEmpty from \"../../assets/sounds/empty/empty.mp3\";\nimport AudioResFilled from \"../../assets/sounds/filled/filled.mp3\";\nimport AudioResWin from \"../../assets/sounds/win/win.mp3\";\n\n// create several copies of Audio to play sound on several clicks with the same state\nconst createSeveralAudioElem = (number, soundFile) => {\n  return [...Array(number)].map(() => new Audio(soundFile));\n};\n\nexport const soundEffects = {\n  cross: createSeveralAudioElem(6, AudioResCross),\n  filled: createSeveralAudioElem(6, AudioResFilled),\n  empty: createSeveralAudioElem(6, AudioResEmpty),\n  win: createSeveralAudioElem(3, AudioResWin),\n};\n","import { themeList } from \"./themesList\";\n\nexport const changeTheme = (themeName) => {\n  const { body } = document;\n  const classNameForTheme = `theme-${themeName}`;\n  body.classList.remove(...themeList);\n  body.classList.add(classNameForTheme);\n  localStorage.setItem(\"theme\", themeName);\n};\n","export const getThemeName = () => {\n  const defaultThemeName = \"light\";\n  const themeName = localStorage.getItem(\"theme\") ?? defaultThemeName;\n  return themeName;\n};\n","const themes = [\"light\", \"dark\"];\n\nconst themeList = themes.map((themeName) => `theme-${themeName}`);\n\nexport { themes, themeList };\n","import { changeTheme } from \"./changeTheme\";\nimport { themes } from \"./themesList\";\n\nexport const toggleTheme = (curThemeName) => {\n  const newThemeName = themes.filter((theme) => theme !== curThemeName)[0];\n  changeTheme(newThemeName);\n\n  return newThemeName;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(984);\n",""],"names":["NonogramsData","GameApp","createHeader","createRandomButton","createSettingsButtons","changeSoundsMuteValue","VolUpSvg","VolOffSvg","LightModeSvg","DarkModeSvg","BurgerToOpenSvg","BurgerToCloseSvg","toggleTheme","restoreSavedSettings","createActionButtonsSection","createHamburgerSection","showHamburgerLatestWins","closeHamburgerMenu","createDrawerOverlayLatestWins","createDrawerOverlayHamburg","handleHamburgBtnClick","hideHamburgerLatestWins","document","body","classList","add","fonts","ready","_createSettingsButton","soundBtn","themeBtn","burgerBtn","gameApp","randomBtn","drawerOverlayLatestWins","_createHamburgerSecti","hambSection","_createHamburgerSecti2","_slicedToArray","hambBtnsNodes","scoreHambBtn","randomHambBtn","loadHambBtn","solutionHambBtn","drawerOverlayHamburg","_createActionButtonsS","_createActionButtonsS2","resetBtn","saveBtn","loadBtn","solutionBtn","addEventListener","setRandomPuzzle","bind","resetGame","saveGame","loadGame","showSolution","closeHamburger","latestWinsSection","isSoundMuted","innerHTML","firstChild","themeName","window","innerWidth","capitalizeWord","word","capitalizedWord","toUpperCase","substring","toLowerCase","CROSS","EMPTY","FILLED","stateToChar","_defineProperty","charToState","c","e","f","regExpStates","Object","keys","join","regExpStr","concat","regExpWithStates","RegExp","decodePuzzle","puzzleString","puzzleStrArr","split","numRows","numCols","strToDecode","puzzleMatrix","_toConsumableArray","Array","map","strMatches","matchAll","elemIdx","iGroup","length","group","valueStr","countStr","value","count","i","iRow","Math","floor","jCol","formPuzzleClues","rowsAllClues","colsAllClues","colsCluesCounter","fill","rowClues","rowCluesCounter","_puzzleMatrix$iRow$jC","_puzzleMatrix$iRow","push","countPuzzleRowsCols","puzzleClues","numRowForClues","max","apply","colClues","numColForClues","numRowForPuzzle","numColForPuzzle","drawGameBoardGrid","canvasContextRef","playAreaIn","cluesIn","board","boardSettings","ctx","cellSizePx","lineWidthPx","dividerWidthPx","divideNumCells","clues","rows","cells","cols","playArea","lineShiftPx","dividerShiftPx","isDivider","index","dividerShiftCnt","getShiftInPx","getClueLineCoordinate","lineIndex","coordShiftPx","numDividersBeforeLine","numRegLinesBeforeLine","numCellsBeforeLine","lineCoordPx","getLineCoordinate","dividerShift","ceil","getLineWidth","getLineColor","dividerColor","lineColor","drawLine","x0","y0","x1","y1","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","drawColumnLinesForClues","yBottom","height","boardTopEdge","yTop","cluesHeight","x","drawRowLinesForClues","xRight","width","boardLeftEdge","xLeft","cluesWidth","y","drawColumnLinesForPlayArea","drawRowLinesForPlayArea","getGameBoardSize","countDividers","numCells","isEndLineDivider","numCellsPuzzle","dividers","lines","sizeRightEndLine","numColDividers","numColLines","numCol","boardWidth","sizeBottomEndLine","numRowDividers","numRowLines","numRow","boardHeight","cntDividerInOneBlock","blockSize","setTextStyleForClues","fillStyle","cluesColor","font","cluesFont","textBaseline","textAlign","fillCellWithColor","cell","fillColor","fillRect","makeCellTransparent","clearRect","getFullBlocksCells","cntFullBlocks","cntBlockFullCells","getCoordShiftByIndex","cellIndexInPuzzle","cellWithLinePx","_getFullBlocksCells","coordShift","drawSolution","getCoordShift","puzzleRow","filledCellBg","writeClues","textVertDeltaPx","cellHalfSizePx","getCoordShiftWithDividers","getCoordShiftWoutDividers","cntFullCells","writeClueInCell","clueText","clueTextStr","toString","xCellCenter","yCellCenter","fillText","writeRowClues","colShiftCnt","colIndex","writeColClues","rowShiftCnt","rowIndex","actionTypes","mainAction","subAction","fillCellWithCross","cross","color","crossPoints","leftTop","margin","rghtBtm","rghtTop","leftBtm","changeCellContent","canvasContext","cellRef","getCellData","state","getStateAfterMainAction","curState","newState","getStateAfterSubAction","convertToCountState","getDeltaForState","stateValIn","corrVal","stateVal","deltaIncorrect","getDeltaForNewState","correctValue","previousState","prevDelta","curDelta","stateDelta","soundEffects","soundStateMap","filled","empty","playSoundOnStateChange","_soundArr$filter$","soundArr","sound","filter","el","paused","play","_xLeft","WeakMap","_yTop","_state","_correctVal","_actions","_changeState","WeakSet","Cell","currentState","_classCallCheck","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","writable","_classPrivateFieldSet","_createClass","key","_classPrivateFieldGet","handleAction","actionType","actions","_classPrivateMethodGet","_changeState2","call","newCellState","prevState","correctState","stateToCheck","correctedState","constructBoardCells","gameBoard","boardStateMatrix","puzzle","boardCells","rowBoard","yTopCell","getCellCoordByIndex","_rowBoard$jCol","_puzzle$iRow$jCol","_puzzle$iRow","valueBoard","valueCorrect","stateBoard","stateCorrect","xLeftCell","countSumCellsForPlayField","sumCells","boardValue","countFilledCellsInPuzzle","puzzleMatrixRef","isFilled","cntFilled","rowPuzzle","cntRowFilled","initializeBoardStateMatrix","_puzzleMatrix$0$lengt","isEmptyBoardStateMatrix","playSoundOnWin","win","encodePuzzle","getValCounterStr","counter","valCounterStr","rowNum","colNum","sizePrefix","puzzleFlat","flat","puzzleStr","curCounter","prevVal","elem","curVal","changeCellsContentToBoardState","getCanvasContext","_gameBoard$getBoardSe","getBoardSettings","_gameBoard$getBoard","getBoard","rowCells","_gameBoard","_puzzleMatrix","_numFilledCellsPuzzle","_sumCellsPlayField","_boardStateMatrix","_boardCells","_stopWatch","_gameApp","_constructBoardCells","_changeCellsContentToBoardState","_handleWinGame","PlayField","stopWatch","_constructBoardCells2","_changeCellsContentToBoardState2","cellIndexRow","cellIndexColumn","_cell$handleAction","_handleWinGame2","getBoardStateString","messageText","showDialog","stop","blockPlayField","addLatestWin","timeInSec","getTimeInSeconds","winMessageText","getCellIndexByOneCoord","coord","diffDividerRegLinePx","coordShiftInBlock","idxBlockShift","idxCellShift","cellIndex","clearPlayField","playAreaRect","gameAppNode","createGameBoardCanvas","canvasSection","createElement","appendChild","canvasNode","getTextVertDeltaPx","sampleString","textMetrics","measureText","vertDelta","actualBoundingBoxAscent","actualBoundingBoxDescent","_canvasNode","_canvasContext","_playField","_isInPlayMode","_board","_playArea","_clues","_boardSettings","_puzzleClues","_hasEventListeners","_isStopWatchStarted","_game","_setTextStyleForClues","_setTextVertDelta","_setCountRowsCols","_setBoardSize","_setPlayFieldPath2D","_drawBoardGrid","_writeClues","_triggerEventInsidePlayField","_addListeners","GameBoard","game","rectPath","Path2D","rect","getContext","getCellIndexByCoord","coordinate","drawBoard","timeSec","_setCountRowsCols2","_setBoardSize2","_drawBoardGrid2","_setTextStyleForClues2","_setTextVertDelta2","_writeClues2","_addListeners2","isRestartTimer","initialize","emptyBoardStateMatrix","isActiveGame","boardStateStr","pauseStopWatch","_countPuzzleRowsCols","_getGameBoardSize","_setPlayFieldPath2D2","playFieldPath2D","_triggerEventInsidePlayField2","event","isInsidePlayArea","isPointInPath","offsetX","offsetY","start","xInPlayArea","yInPlayArea","idxRow","idxCol","_this","values","forEach","preventDefault","formatTimeInSec","numToStrWithZeroPad","number","padStart","secInMin","minInHour","hoursNum","minutesNum","secondsNum","hoursStr","minutesStr","secondsStr","timeStr","_elapsedTimeSec","_startTimeMSec","_intervalId","_mSecInSec","_stopWatchNode","StopWatch","stopWatchNode","updateTimeInSec","currTimeInMSec","Date","now","elapsedTimeMSec","innerText","getTimeFormatted","isRestart","elapsedTimeSecSaved","elapsedTimeSecZero","startTimeInMSec","oneSecInMSec","setInterval","stopTimeInMSec","clearInterval","reset","getLatestWins","_localStorage$latestW","latestWinsDefaultArr","latestWinsArr","JSON","parse","localStorage","latestWins","nonogramId","nonogramName","nonogramLevel","timeFormattedStr","timeSeconds","currentWin","id","name","level","time","shift","setItem","stringify","getSortedLatestWins","compareByTimeInSeconds","a","b","latestWinsSorted","sort","updateLatestWinsNodes","winsListNodes","winLine","j","_latestWins$i$cols$j","_latestWins$i","winNode","saveGameToLocalStorage","gameStatus","_nonogram","_isGameInProgress","_latestWinsNodes","Game","latestWinsNodes","setNonogram","nonogram","_formPuzzleClues","nameWithSize","createLatestWinsNodes","latestWinsHeader","numWins","winsLine","winNodes","winCol","className","createSelectGameSection","selectGameSection","divLevelBlock","levelLabel","htmlFor","levelSelect","divNonogramBlock","nonogramLabel","nonogramSelect","createLevelOptions","nonogramsList","levelSelectRef","levels","Set","levelName","levelOption","selected","selectedIndex","createNonogramOptions","nonogramOptionNodesByLevel","_loop","iLevel","levelNonograms","levelNonogramsNodes","jNongr","nonogramOption","handleLevelChange","levelSelectNode","nonogramSelectNodeRef","isTriggerChangeGameToPuzzle","arguments","undefined","nonogramSelectNode","defaultLevelIdx","levelIdx","levelNonogramNodes","replaceChildren","nonogramValueId","options","changeGameToPuzzle","handleNonogramChange","defaultNonogramIdx","nonogramIdx","createStatusSection","statusSection","stopWatchBlock","nonogramNameBlock","nonogramNameNode","loadGameFromLocalStorage","_localStorage$savedGa","defaultSavedGame","savedGame","createMessageDialog","messageDialog","msgText","msgCloseBtn","type","close","showMessageDialog","messageNodes","dialogNode","textNode","showModal","getSoundMuteValue","getThemeName","_nonograms","_activeNonogramId","_levelSelectNode","_nonogramSelectNode","_nonogramOptionNodesByLevel","_nonogramNameNode","_message","_getNonogramById","_getRandomNonogramId","_createNonogramsArray","_createSelectNodes","_addSelectNodesEventListeners","_changeNonogramSelectionById","nonogramsData","_createNonogramsArray2","_createStatusSection","_createLatestWinsNode","_createMessageDialog","_createSelectNodes2","_addSelectNodesEventListeners2","getNonogramsList","_ref","_getNonogramById2","currNonogramId","newNonogramId","_getRandomNonogramId2","_changeNonogramSelectionById2","_loadGameFromLocalSto","nonogramDataID","dataIdToId","Map","idx","has","get","randomId","random","capitalizedLevel","capitalizedName","sizeStr","size","_createSelectGameSect","isTriggerChangeEvent","levelOptions","isSoughtForLevel","option","levelSelectIdx","findIndex","nonogramsOptions","isSoughtForNonogram","nonogramSelectIdx","dispatchEvent","Event","default","actionsSection","actionBtns","actionBtnsNodes","actionBtn","LogoSvg","header","divLogo","logo","title","randomSection","settingsSection","isSoundOff","isBurgerClose","createGameAppNode","btnHamburg","htmlElement","documentElement","remove","hambBtns","hambBtn","openHamburgerMenu","contains","restoreSoundSettings","changeTheme","restoreThemeSettings","_localStorage$getItem","defaultThemeName","getItem","isMuted","soundsArrs","soundIn","muted","_localStorage$soundOf","defaultIsSoundOff","soundOff","AudioResCross","AudioResEmpty","AudioResFilled","AudioResWin","createSeveralAudioElem","soundFile","Audio","themeList","_body$classList","_document","classNameForTheme","themes","curThemeName","newThemeName","theme"],"sourceRoot":""}